{"version":3,"file":"js/ddm_uploader_frontend.js","mappings":"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","sources":["webpack://ddm_uploader_frontend/./src/components/ConsentQuestion.vue?3b2b","webpack://ddm_uploader_frontend/./src/components/ConsentQuestion.vue","webpack://ddm_uploader_frontend/./src/utils/stateCatalog.ts","webpack://ddm_uploader_frontend/./src/utils/debounce.ts","webpack://ddm_uploader_frontend/./src/components/ExtractionTable.vue?0964","webpack://ddm_uploader_frontend/./src/components/ExtractionTable.vue","webpack://ddm_uploader_frontend/./src/components/ExtractionItem.vue?11ed","webpack://ddm_uploader_frontend/./src/components/ExtractionItem.vue","webpack://ddm_uploader_frontend/./src/components/ExtractionOverview.vue?36b3","webpack://ddm_uploader_frontend/./src/components/ExtractionOverview.vue","webpack://ddm_uploader_frontend/./src/types/UploaderState.ts","webpack://ddm_uploader_frontend/./src/components/FileDrop.vue?a23d","webpack://ddm_uploader_frontend/./src/components/FileDrop.vue","webpack://ddm_uploader_frontend/./src/components/Instructions.vue?7dc2","webpack://ddm_uploader_frontend/./src/components/Instructions.vue","webpack://ddm_uploader_frontend/./src/composables/useConsentManager.ts","webpack://ddm_uploader_frontend/./src/types/ProcessingError.ts","webpack://ddm_uploader_frontend/./src/composables/useExtractionStateTracker.ts","webpack://ddm_uploader_frontend/./src/classes/BlueprintExtractionOutcome.ts","webpack://ddm_uploader_frontend/./src/utils/errorCatalog.ts","webpack://ddm_uploader_frontend/./src/composables/useFileProcessor/errorHandling.ts","webpack://ddm_uploader_frontend/./src/utils/ExtractionFunctions.ts","webpack://ddm_uploader_frontend/./src/composables/useFileProcessor/extractionEngine.ts","webpack://ddm_uploader_frontend/./src/composables/useFileProcessor/contentParsers.ts","webpack://ddm_uploader_frontend/./src/composables/useFileProcessor/fileHandlers.ts","webpack://ddm_uploader_frontend/./src/composables/useFileProcessor/index.ts","webpack://ddm_uploader_frontend/./src/composables/useLogPoster.ts","webpack://ddm_uploader_frontend/./src/components/UploaderWrapper.vue?d1e8","webpack://ddm_uploader_frontend/./src/components/UploaderWrapper.vue","webpack://ddm_uploader_frontend/./src/components/IssueModal.vue?cb8d","webpack://ddm_uploader_frontend/./src/components/IssueModal.vue","webpack://ddm_uploader_frontend/./src/composables/useUploaderValidator.ts","webpack://ddm_uploader_frontend/./src/composables/useDataSubmitter.ts","webpack://ddm_uploader_frontend/./src/components/SubmittingOverlay.vue?a60a","webpack://ddm_uploader_frontend/./src/components/SubmittingOverlay.vue","webpack://ddm_uploader_frontend/./src/UploaderApp.vue?b81e","webpack://ddm_uploader_frontend/./src/UploaderApp.vue","webpack://ddm_uploader_frontend/./src/main.ts","webpack://ddm_uploader_frontend/webpack/bootstrap","webpack://ddm_uploader_frontend/webpack/runtime/chunk loaded","webpack://ddm_uploader_frontend/webpack/runtime/compat get default export","webpack://ddm_uploader_frontend/webpack/runtime/define property getters","webpack://ddm_uploader_frontend/webpack/runtime/global","webpack://ddm_uploader_frontend/webpack/runtime/hasOwnProperty shorthand","webpack://ddm_uploader_frontend/webpack/runtime/make namespace object","webpack://ddm_uploader_frontend/webpack/runtime/jsonp chunk loading","webpack://ddm_uploader_frontend/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n    key: 0,\n    class: \"fs-5 fw-bold pb-3\"\n};\nconst _hoisted_2 = {\n    key: 1,\n    class: \"fw-bold pb-3\"\n};\nconst _hoisted_3 = {\n    class: \"btn-group\",\n    role: \"group\",\n    \"aria-label\": \"Consent options\"\n};\nconst _hoisted_4 = [\"id\", \"name\", \"aria-checked\"];\nconst _hoisted_5 = [\"for\"];\nconst _hoisted_6 = [\"id\", \"name\", \"aria-checked\"];\nconst _hoisted_7 = [\"for\"];\nimport { useI18n } from 'vue-i18n';\nimport { ref } from \"vue\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'ConsentQuestion',\n    props: {\n        combinedConsent: { type: Boolean },\n        blueprintId: {}\n    },\n    emits: [\"consentUpdated\"],\n    setup(__props, { emit: __emit }) {\n        /**\n         * Component ConsentQuestion\n         *\n         * Displays a consent toggle (Agree/Disagree) for blueprint donations, supporting both single and combined consent modes.\n         *\n         * Features:\n         * - Allows user to agree or disagree with data donation.\n         * - Supports updating consent individually per blueprint or globally for all blueprints (combinedConsent).\n         * - Emits consent changes to parent via 'consentUpdated' event.\n         * - Highlights selected choice visually.\n         *\n         * Props:\n         * - combinedConsent (boolean): If true, sets consent for all blueprints.\n         * - blueprintId (number | null): Current blueprint ID (null if combined consent).\n         *\n         * Emits:\n         * - consentUpdated (consent: boolean, blueprintId: number | null): Emits updated consent and blueprint context.\n         *\n         * Dependencies:\n         * - vue-i18n for translations.\n         */\n        const { t, te, locale } = useI18n();\n        const props = __props;\n        const consented = ref(null);\n        const emit = __emit;\n        /**\n         * Updates the consent state and emits the change to the parent component.\n         *\n         * When combinedConsent is true, this emits with a null blueprintId to indicate\n         * the change applies to all blueprints. Otherwise, it emits with the specific\n         * blueprintId to update consent for just that blueprint.\n         *\n         * @param consent - Whether the user has consented (true) or declined (false)\n         */\n        function updateConsent(consent) {\n            emit('consentUpdated', consent, props.blueprintId);\n            consented.value = consent;\n        }\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                (_ctx.combinedConsent)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(_unref(t)('feedback.donation-question')), 1))\n                    : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(t)('feedback.donation-question')), 1)),\n                _createElementVNode(\"div\", _hoisted_3, [\n                    _createElementVNode(\"input\", {\n                        type: \"radio\",\n                        class: \"btn-check\",\n                        id: 'donate-agree-' + _ctx.blueprintId,\n                        name: 'agreement-' + _ctx.blueprintId,\n                        value: true,\n                        \"aria-checked\": consented.value === true,\n                        autocomplete: \"off\",\n                        onChange: _cache[0] || (_cache[0] = ($event) => (updateConsent(true))),\n                        required: \"\"\n                    }, null, 40, _hoisted_4),\n                    _createElementVNode(\"label\", {\n                        class: _normalizeClass([{ 'selected-donate-agree': consented.value === true }, \"btn btn-light donation-btn shadow-none\"]),\n                        for: 'donate-agree-' + _ctx.blueprintId\n                    }, _toDisplayString(_unref(t)('feedback.donation-agree')), 11, _hoisted_5),\n                    _createElementVNode(\"input\", {\n                        type: \"radio\",\n                        class: \"btn-check\",\n                        id: 'donate-disagree-' + _ctx.blueprintId,\n                        name: 'agreement-' + _ctx.blueprintId,\n                        value: false,\n                        \"aria-checked\": consented.value === false,\n                        autocomplete: \"off\",\n                        onChange: _cache[1] || (_cache[1] = ($event) => (updateConsent(false)))\n                    }, null, 40, _hoisted_6),\n                    _createElementVNode(\"label\", {\n                        class: _normalizeClass([{ 'selected-donate-disagree': consented.value === false }, \"btn btn-light donation-btn shadow-none\"]),\n                        for: 'donate-disagree-' + _ctx.blueprintId\n                    }, _toDisplayString(_unref(t)('feedback.donation-disagree')), 11, _hoisted_7)\n                ])\n            ], 64));\n        };\n    }\n});\n","import script from \"./ConsentQuestion.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ConsentQuestion.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ConsentQuestion.vue?vue&type=style&index=0&id=520690d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-520690d8\"]])\n\nexport default __exports__","/**\n * Centralized collection of extraction states that can be used for overall extraction state description and\n * blueprint state description.\n */\nexport const EXTRACTION_STATES = {\n    SUCCESS: 'success', // (Every) blueprint has been extracted without encountering any errors.\n    PARTIAL: 'partial', // Some blueprints have been successfully extracted, others have encountered errors (only on file-level).\n    FAILED: 'failed', // No data has been extracted due to (a) critical error(s).\n    PENDING: 'pending', // Extraction not yet attempted.\n    NO_DATA: 'no data extracted' // No data has been extracted but no errors occurred (usually means that all entries have been filtered out).\n};\n","/**\n * Creates a debounced function that delays invoking the provided function\n * until after the specified wait time has elapsed since the last time it was invoked.\n *\n * @param fn - The function to debounce\n * @param wait - The number of milliseconds to delay\n * @returns A debounced version of the original function\n */\nexport function debounce(fn, wait) {\n    let timer;\n    return function (...args) {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        const context = this;\n        timer = setTimeout(() => {\n            fn.apply(context, args);\n        }, wait);\n    };\n}\n","import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = { class: \"pb-2\" };\nconst _hoisted_2 = { class: \"table table-sm\" };\nconst _hoisted_3 = { key: 1 };\nconst _hoisted_4 = { class: \"fs-875 mb-2\" };\nconst _hoisted_5 = {\n    for: \"data-search\",\n    class: \"visually-hidden\"\n};\nconst _hoisted_6 = [\"placeholder\"];\nconst _hoisted_7 = {\n    key: 0,\n    class: \"fs-875 pb-2\"\n};\nconst _hoisted_8 = { key: 1 };\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = { key: 0 };\nconst _hoisted_12 = { key: 1 };\nimport { useI18n } from 'vue-i18n';\nimport { computed, ref, watch } from \"vue\";\nimport { debounce } from \"@uploader/utils/debounce\";\nconst pageSize = 20;\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'ExtractionTable',\n    props: {\n        blueprintOutcome: {}\n    },\n    setup(__props) {\n        /**\n         * Component: ExtractionTable\n         *\n         * Displays extracted blueprint data in a paginated, searchable table that can be expanded/collapsed.\n         *\n         * Features:\n         * - Search/filter extracted data entries across all fields (case-insensitive).\n         * - Pagination control (next/previous) with dynamic page indicators and automatic page adjustment.\n         * - Expand/collapse table to show more or less data with smooth transition animation.\n         * - Dynamic table layout that adapts to the available data fields.\n         * - Handles empty data gracefully with appropriate messaging.\n         *\n         * Props:\n         * - blueprintOutcome (BlueprintExtractionOutcome): Object containing extraction data for a blueprint,\n         *   including extracted data rows and field mappings.\n         *\n         * Computed:\n         * - filteredItems: Data entries that match the current search term.\n         * - lowerPosition: Index of the first visible item on the current page.\n         * - upperPosition: Index of the last visible item on the current page.\n         * - maxPage: Maximum number of pages based on filtered data and page size.\n         *\n         * Internal State:\n         * - pageSize: Number of items displayed per page (defaults to 20).\n         * - currentPage: Current page being viewed.\n         * - showData: Whether the table is expanded (true) or condensed (false).\n         * - searchTerm: Current search filter text.\n         *\n         * Methods:\n         * - nextTablePage(): Navigate to the next page if available.\n         * - prevTablePage(): Navigate to the previous page if available.\n         * - toggleShowHideData(): Expand or collapse the data table.\n         *\n         * Dependencies:\n         * - vue-i18n for text translations.\n         */\n        const { t, te, locale } = useI18n();\n        const props = __props;\n        const currentPage = ref(1);\n        const showData = ref(false);\n        const searchTerm = ref('');\n        const debouncedSearch = ref('');\n        const updateSearch = debounce((value) => {\n            debouncedSearch.value = value.toLowerCase();\n        }, 300);\n        watch(searchTerm, (newValue) => {\n            updateSearch(newValue);\n        });\n        /**\n         * Filters the extracted data based on the current search term.\n         *\n         * Performs a case-insensitive search across all fields in each data item.\n         * If any field contains the search term, the item is included in the results.\n         *\n         * @returns Array of data items that match the search criteria\n         */\n        const filteredItems = computed(() => {\n            const lowercasedSearchTerm = debouncedSearch.value.toLowerCase();\n            return props.blueprintOutcome.extractedData.filter(item => {\n                // Iterate through all the values of the current item\n                for (const key in item) {\n                    if (Object.prototype.hasOwnProperty.call(item, key)) {\n                        const value = item[key];\n                        if (String(value).toLowerCase().includes(lowercasedSearchTerm)) {\n                            return true; // If any field matches, include the item\n                        }\n                    }\n                }\n                return false; // If no field matches, exclude the item\n            });\n        });\n        /**\n         * Calculates the index of the first item on the current page.\n         *\n         * @returns Zero-based index of the first visible item\n         */\n        const lowerPosition = computed(() => {\n            return Math.max((currentPage.value * pageSize) - pageSize, 0);\n        });\n        /**\n         * Calculates the index of the last item on the current page.\n         *\n         * @returns Zero-based index of the last visible item\n         */\n        const upperPosition = computed(() => {\n            return Math.min(filteredItems.value.length, lowerPosition.value + pageSize);\n        });\n        const maxPage = computed(() => {\n            return Math.ceil(filteredItems.value.length / pageSize);\n        });\n        watch(() => [maxPage.value], () => {\n            if (currentPage.value > maxPage.value) {\n                currentPage.value = maxPage.value;\n            }\n            if (currentPage.value < 1) {\n                currentPage.value = 1;\n            }\n        }, { immediate: true, deep: true });\n        const nextTablePage = () => {\n            if (currentPage.value < maxPage.value) {\n                currentPage.value += 1;\n            }\n        };\n        const prevTablePage = () => {\n            if (currentPage.value > 1) {\n                currentPage.value -= 1;\n            }\n        };\n        /**\n         * Toggles between expanded and condensed table views.\n         *\n         * When expanded, the table shows all rows up to the page size.\n         * When condensed, the table is height-limited and shows a gradient overlay.\n         */\n        const toggleShowHideData = () => {\n            showData.value = !showData.value;\n        };\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_unref(t)('extraction-table.donation-info')), 1),\n                _createElementVNode(\"div\", {\n                    class: _normalizeClass([\"table-wrapper fs-875 pb-3\", { 'table-condensed': !showData.value, 'table-expanded': showData.value }])\n                }, [\n                    _createElementVNode(\"table\", _hoisted_2, [\n                        _createElementVNode(\"thead\", null, [\n                            _createElementVNode(\"tr\", null, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.blueprintOutcome.extractedFieldsMap.values(), (value) => {\n                                    return (_openBlock(), _createElementBlock(\"th\", { key: value }, _toDisplayString(value), 1));\n                                }), 128))\n                            ])\n                        ]),\n                        _createElementVNode(\"tbody\", null, [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredItems.value.slice(lowerPosition.value, upperPosition.value), (row) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: row }, [\n                                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.blueprintOutcome.extractedFieldsMap.keys(), (key) => {\n                                        return (_openBlock(), _createElementBlock(_Fragment, { key: key }, [\n                                            (key in row)\n                                                ? (_openBlock(), _createElementBlock(\"td\", { key: row }, _toDisplayString(row[key]), 1))\n                                                : (_openBlock(), _createElementBlock(\"td\", _hoisted_3, \"–\"))\n                                        ], 64));\n                                    }), 128))\n                                ]));\n                            }), 128))\n                        ])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_4, [\n                        _createElementVNode(\"label\", _hoisted_5, _toDisplayString(_unref(t)('extraction-table.search-entries')), 1),\n                        _withDirectives(_createElementVNode(\"input\", {\n                            id: \"data-search\",\n                            type: \"text\",\n                            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => ((searchTerm).value = $event)),\n                            placeholder: _unref(t)('extraction-table.search-entries'),\n                            \"aria-label\": \"Search data entries\"\n                        }, null, 8, _hoisted_6), [\n                            [_vModelText, searchTerm.value]\n                        ])\n                    ]),\n                    (filteredItems.value.length > 0)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(_unref(t)('extraction-table.page-info', { currentPage: currentPage.value, maxPage: maxPage.value })) + \" | \" + _toDisplayString(_unref(t)('extraction-table.entry-info', { lower: lowerPosition.value + 1, upper: Math.min(upperPosition.value + 1, filteredItems.value.length), total: filteredItems.value.length })), 1))\n                        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString(_unref(t)('extraction-table.all-filtered')), 1)),\n                    _createElementVNode(\"div\", null, [\n                        _createElementVNode(\"button\", {\n                            onClick: prevTablePage,\n                            class: \"btn btn-pagination btn-sm me-2\",\n                            disabled: currentPage.value <= 1,\n                            \"aria-label\": \"Previous page\"\n                        }, _toDisplayString(_unref(t)('extraction-table.previous-page')), 9, _hoisted_9),\n                        _createElementVNode(\"button\", {\n                            onClick: nextTablePage,\n                            class: \"btn btn-pagination btn-sm me-2\",\n                            disabled: currentPage.value >= maxPage.value,\n                            \"aria-label\": \"Next page\"\n                        }, _toDisplayString(_unref(t)('extraction-table.next-page')), 9, _hoisted_10)\n                    ])\n                ], 2),\n                _createElementVNode(\"div\", {\n                    class: _normalizeClass([\"show-data-control text-center fs-875 mb-3\", { 'control-expanded': showData.value, 'control-condensed': !showData.value }])\n                }, [\n                    _createElementVNode(\"a\", {\n                        class: _normalizeClass([\"expansion-control-btn\", { 'expansion-control-btn-expanded': showData.value, 'expansion-control-btn-condensed': !showData.value }]),\n                        onClick: toggleShowHideData\n                    }, [\n                        (!showData.value)\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(_unref(t)('extraction-table.show-data')), 1))\n                            : (showData.value)\n                                ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _toDisplayString(_unref(t)('extraction-table.hide-data')), 1))\n                                : _createCommentVNode(\"\", true)\n                    ], 2)\n                ], 2)\n            ], 64));\n        };\n    }\n});\n","import script from \"./ExtractionTable.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ExtractionTable.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ExtractionTable.vue?vue&type=style&index=0&id=8ec0181e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8ec0181e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue';\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, Fragment as _Fragment, unref as _unref, renderList as _renderList } from \"vue\";\nconst _hoisted_1 = { class: \"d-flex flex-column align-items-start pt-3 pb-3 blueprint-row\" };\nconst _hoisted_2 = { class: \"d-flex flex-row align-items-start pb-1\" };\nconst _hoisted_3 = { class: \"status-icon\" };\nconst _hoisted_4 = { class: \"fw-bold\" };\nconst _hoisted_5 = { class: \"d-flex flex-row align-items-start w-100 overflow-hidden\" };\nconst _hoisted_6 = { class: \"status-icon opacity-0\" };\nconst _hoisted_7 = { class: \"d-flex flex-column w-100\" };\nconst _hoisted_8 = { key: 0 };\nconst _hoisted_9 = { class: \"pb-3\" };\nconst _hoisted_10 = {\n    key: 0,\n    class: \"pt-3 pb-1\"\n};\nconst _hoisted_11 = { class: \"pb-2\" };\nconst _hoisted_12 = { key: 0 };\nconst _hoisted_13 = {\n    role: \"button\",\n    \"aria-expanded\": \"false\",\n    id: \"error-details-summary\"\n};\nconst _hoisted_14 = {\n    role: \"region\",\n    \"aria-labelledby\": \"error-details-summary\"\n};\nconst _hoisted_15 = { key: 0 };\nimport { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nimport ExtractionTable from \"@uploader/components/ExtractionTable.vue\";\nimport ConsentQuestion from \"@uploader/components/ConsentQuestion.vue\";\nimport { computed } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'ExtractionItem',\n    props: {\n        blueprint: {},\n        extractionState: {},\n        extractionMessage: {},\n        extractionErrorText: {},\n        extractionOutcome: {},\n        hasDetailErrors: { type: Boolean },\n        errors: {},\n        combinedConsent: { type: Boolean }\n    },\n    emits: [\"consentUpdated\"],\n    setup(__props, { emit: __emit }) {\n        /**\n         * Component: ExtractionItem\n         *\n         * A presentational component that displays extraction results for a single blueprint.\n         * It handles different extraction states (pending, success, failure, no data)\n         * and provides appropriate UI for each state.\n         *\n         * Features:\n         * - Displays blueprint name and description\n         * - Shows state-specific icons (success checkmark, failure X, etc.)\n         * - Renders extracted data tables for successful extractions\n         * - Displays error messages with expandable technical details\n         * - Provides consent controls for successful extractions (when not using combined consent)\n         * - Uses computed properties for conditional rendering logic\n         *\n         * Props:\n         * - blueprint (Blueprint): The blueprint configuration object\n         * - extractionState (ExtractionStates): Current extraction state for this blueprint\n         * - extractionMessage (string): i18n key for state-specific messages\n         * - extractionErrorText (string): Formatted error description\n         * - extractionOutcome (BlueprintExtractionOutcome): Data extracted from this blueprint\n         * - hasDetailErrors (boolean): Whether detailed error information is available\n         * - errors (ProcessingError[]): Array of error objects with details\n         * - combinedConsent (boolean): Whether consent is managed globally or per-blueprint\n         *\n         * Emits:\n         * - consentUpdated (consent: boolean, blueprintId: number | null): Forwards consent updates\n         *   from the ConsentQuestion component\n         *\n         * Dependencies:\n         * - ExtractionTable: For displaying extracted data\n         * - ConsentQuestion: For handling consent input\n         * - vue-i18n: For translation\n         *\n         * Note:\n         * This component is designed to be a child of ExtractionOverview, receiving preprocessed\n         * data and focusing solely on presentation concerns.\n         */\n        const { t, te, locale } = useI18n();\n        const props = __props;\n        const emit = __emit;\n        const iconStateMap = {\n            [EXTRACTION_STATES.SUCCESS]: 'bi bi-file-earmark-check-fill text-success',\n            [EXTRACTION_STATES.FAILED]: 'bi bi-file-earmark-x-fill text-danger',\n            [EXTRACTION_STATES.NO_DATA]: 'bi bi-file-earmark-x-fill text-grey',\n            [EXTRACTION_STATES.PENDING]: 'bi bi-file-earmark-fill text-grey',\n            [EXTRACTION_STATES.PARTIAL]: ''\n        };\n        /**\n         * Computes the icon class based on the current extraction state.\n         *\n         * @returns The Bootstrap icon class string for the current state\n         */\n        const iconClass = computed(() => props.extractionState ? iconStateMap[props.extractionState] : iconStateMap[EXTRACTION_STATES.PENDING]);\n        const extractionPending = computed(() => props.extractionState == EXTRACTION_STATES.PENDING);\n        const extractionSuccess = computed(() => props.extractionState == EXTRACTION_STATES.SUCCESS);\n        const nothingExtracted = computed(() => props.extractionState == EXTRACTION_STATES.NO_DATA);\n        const extractionFailed = computed(() => props.extractionState == EXTRACTION_STATES.FAILED);\n        /**\n         * Forwards consent updates from child components to the parent.\n         *\n         * This method acts as a mediator between ConsentQuestion components\n         * and the parent component, preserving the event structure.\n         *\n         * @param consent - Whether the user has given consent\n         * @param blueprintId - ID of the blueprint being consented to, or null for combined consent\n         */\n        const passConsentUpdateToParent = (consent, blueprintId) => {\n            emit('consentUpdated', consent, blueprintId);\n        };\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n                _createElementVNode(\"div\", _hoisted_2, [\n                    _createElementVNode(\"div\", _hoisted_3, [\n                        _createElementVNode(\"i\", {\n                            class: _normalizeClass(iconClass.value)\n                        }, null, 2)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.blueprint.name), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_5, [\n                    _createElementVNode(\"div\", _hoisted_6, [\n                        _createElementVNode(\"i\", {\n                            class: _normalizeClass(iconClass.value)\n                        }, null, 2)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_7, [\n                        (extractionPending.value)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString(_ctx.blueprint.description), 1))\n                            : (extractionSuccess.value)\n                                ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                                    _createElementVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.blueprint.description), 1),\n                                    _createElementVNode(\"div\", null, [\n                                        _createVNode(ExtractionTable, { \"blueprint-outcome\": _ctx.extractionOutcome }, null, 8, [\"blueprint-outcome\"])\n                                    ]),\n                                    (_ctx.combinedConsent === false)\n                                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                                            _createVNode(ConsentQuestion, {\n                                                \"combined-consent\": _ctx.combinedConsent,\n                                                \"blueprint-id\": _ctx.blueprint.id,\n                                                onConsentUpdated: passConsentUpdateToParent\n                                            }, null, 8, [\"combined-consent\", \"blueprint-id\"])\n                                        ]))\n                                        : _createCommentVNode(\"\", true)\n                                ], 64))\n                                : (nothingExtracted.value)\n                                    ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                                        _createElementVNode(\"div\", _hoisted_11, _toDisplayString(_ctx.blueprint.description), 1),\n                                        _createElementVNode(\"div\", null, _toDisplayString(_unref(t)(`${_ctx.extractionMessage}`)), 1)\n                                    ], 64))\n                                    : (extractionFailed.value)\n                                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n                                            _createElementVNode(\"div\", null, _toDisplayString(_unref(t)(`${_ctx.extractionMessage}`)) + \" \" + _toDisplayString(_ctx.extractionErrorText), 1),\n                                            (_ctx.hasDetailErrors)\n                                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                                                    _createElementVNode(\"details\", null, [\n                                                        _createElementVNode(\"summary\", _hoisted_13, _toDisplayString(_unref(t)('feedback.show-error-details')), 1),\n                                                        _createElementVNode(\"div\", _hoisted_14, [\n                                                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.errors, (error, i) => {\n                                                                return (_openBlock(), _createElementBlock(_Fragment, { key: i }, [\n                                                                    (_unref(te)(`${error.i18nDetail}-detail`))\n                                                                        ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, _toDisplayString(_unref(t)(`${error.i18nDetail}-detail`, error.context)), 1))\n                                                                        : _createCommentVNode(\"\", true)\n                                                                ], 64));\n                                                            }), 128))\n                                                        ])\n                                                    ])\n                                                ]))\n                                                : _createCommentVNode(\"\", true)\n                                        ], 64))\n                                        : _createCommentVNode(\"\", true)\n                    ])\n                ])\n            ]));\n        };\n    }\n});\n","import script from \"./ExtractionItem.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ExtractionItem.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ExtractionItem.vue?vue&type=style&index=0&id=5837fb97&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5837fb97\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue';\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = { class: \"pb-3 d-flex align-items-center\" };\nconst _hoisted_2 = { class: \"section-heading\" };\nimport { computed, onMounted, reactive, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nimport ExtractionItem from \"@uploader/components/ExtractionItem.vue\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'ExtractionOverview',\n    props: {\n        uploaderState: {},\n        extractionState: {},\n        blueprints: {},\n        blueprintExtractionStates: {},\n        blueprintOutcomeMap: {},\n        combinedConsent: { type: Boolean }\n    },\n    emits: [\"consentUpdated\"],\n    setup(__props, { emit: __emit }) {\n        /**\n         * Component: ExtractionOverview\n         *\n         * This component coordinates the display of extraction results for multiple blueprints.\n         * It manages the state of extraction results and delegates rendering to ExtractionItem components.\n         *\n         * Features:\n         * - Dynamic intro message based on overall extraction state\n         * - Processes and prepares extraction data for display\n         * - Delegates rendering of individual blueprint results to ExtractionItem components\n         * - Handles consent updates from child components\n         * - Supports reactivity and updates dynamically with extraction state changes\n         * - Internationalization (i18n) support for all user-facing text\n         *\n         * Props:\n         * - uploaderState (UploaderStates): Current state of the uploader component\n         * - extractionState (ExtractionStates): Overall extraction state\n         * - blueprints (Blueprint[]): List of blueprint configurations\n         * - blueprintExtractionStates (BlueprintExtractionStates): Extraction states for each blueprint\n         * - blueprintOutcomeMap (Record<number, BlueprintExtractionOutcome>): Extraction data for each blueprint\n         * - combinedConsent (boolean): Whether consent is managed globally or per blueprint\n         *\n         * Emits:\n         * - consentUpdated (consent: boolean, blueprintId: number | null): Forwards consent updates from ExtractionItem components\n         *\n         * Internal Utilities:\n         * - getBlueprintUIMap(): Creates a data structure with UI display information for each blueprint\n         * - updateBlueprintUIMap(): Updates the reactive UI map when extraction states change\n         * - getErrorDescription(): Formats user-friendly error descriptions\n         * - passConsentUpdateToParent(): Forwards consent events to parent components\n         *\n         * Dependencies:\n         * - ExtractionItem.vue: Renders individual blueprint extraction results\n         * - vue-i18n: For dynamic translation and localization\n         *\n         * Architecture:\n         * This component follows a container/presentational pattern where ExtractionOverview\n         * manages state and coordinates, while ExtractionItem handles presentation details.\n         */\n        const { t, te, locale } = useI18n();\n        const props = __props;\n        const emit = __emit;\n        const blueprintUIMap = reactive(getBlueprintUIMap()); // Map containing blueprint information used in the UI.\n        onMounted(() => {\n            updateBlueprintUIMap();\n        });\n        /**\n         * Updates the blueprint UI map when the extractionState changes.\n         */\n        watch(() => props.uploaderState, () => {\n            if (props.extractionState != EXTRACTION_STATES.PENDING) {\n                updateBlueprintUIMap();\n            }\n        }, { immediate: true, deep: true });\n        /**\n         * Creates the blueprint UI map based on the current blueprintExtractionStates\n         * and the current blueprintOutcomeMap.\n         */\n        function getBlueprintUIMap() {\n            return Object.fromEntries(props.blueprints.map(bp => {\n                const state = props.blueprintExtractionStates[bp.id]?.state;\n                const msg = props.blueprintExtractionStates[bp.id]?.i18nState;\n                const errors = props.blueprintOutcomeMap[bp.id]?.processingErrors ?? [];\n                const anyDetails = errors.some(e => te(`${e.i18nDetail}-detail`));\n                const errorText = getErrorDescription(errors);\n                return [bp.id, {\n                        state,\n                        msg,\n                        errors,\n                        anyDetails,\n                        errorText\n                    }];\n            }));\n        }\n        /**\n         * Updates the reactive blueprint UI map with current extraction state data.\n         *\n         * This method maintains reactivity by clearing and reassigning properties\n         * of the existing reactive object rather than replacing it entirely.\n         * It should be called whenever underlying extraction states change.\n         */\n        function updateBlueprintUIMap() {\n            const newMap = getBlueprintUIMap();\n            // Replace the properties of the reactive object to maintain reactivity\n            Object.keys(blueprintUIMap).forEach(key => delete blueprintUIMap[key]);\n            Object.assign(blueprintUIMap, newMap);\n        }\n        /**\n         * Generates a human-readable description of processing errors.\n         *\n         * If there are no errors, an empty string is returned.\n         * If there is one error, its localized detail is returned.\n         * If there are multiple errors, a comma-separated list of their\n         * lowercased localized details is returned, with \"and\" before the last error.\n         *\n         * @param errors An array of `ProcessingError` objects. Each object is expected\n         * to have `i18nDetail` (the i18n key for the error message) and\n         * `context` (optional context object for i18n).\n         * @returns A string describing the errors.\n         */\n        function getErrorDescription(errors) {\n            let errorDescription = '';\n            if (errors.length === 0) {\n                return '';\n            }\n            else if (errors.length === 1) {\n                return t(`${errors[0].i18nDetail}`, errors[0].context);\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    errorDescription += t(`${errors[i].i18nDetail}`, errors[i].context).toLowerCase();\n                    if (i < errors.length - 2) {\n                        errorDescription += ', ';\n                    }\n                    else if (i === errors.length - 2) {\n                        errorDescription += ', and ';\n                    }\n                }\n            }\n            return errorDescription;\n        }\n        /**\n         * Forwards consent updates from child components to the parent.\n         *\n         * This method acts as a mediator between ConsentQuestion components\n         * and the parent component, preserving the event structure.\n         *\n         * @param consent - Whether the user has given consent\n         * @param blueprintId - ID of the blueprint being consented to, or null for combined consent\n         */\n        const passConsentUpdateToParent = (consent, blueprintId) => {\n            emit('consentUpdated', consent, blueprintId);\n        };\n        const introText = computed(() => props.extractionState === EXTRACTION_STATES.PENDING\n            ? t(\"feedback.intro-extraction-pending\")\n            : t('feedback.intro-extraction-complete'));\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, [\n                    _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"section-icon\" }, [\n                        _createElementVNode(\"i\", { class: \"bi bi-file-earmark-text\" })\n                    ], -1)),\n                    _createElementVNode(\"span\", _hoisted_2, _toDisplayString(introText.value), 1)\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.blueprints, (blueprint) => {\n                    return (_openBlock(), _createBlock(ExtractionItem, {\n                        key: blueprint.id,\n                        blueprint: blueprint,\n                        \"extraction-state\": blueprintUIMap[blueprint.id]?.state,\n                        \"extraction-message\": blueprintUIMap[blueprint.id]?.msg,\n                        \"extraction-error-text\": blueprintUIMap[blueprint.id]?.errorText,\n                        \"extraction-outcome\": _ctx.blueprintOutcomeMap[blueprint.id],\n                        \"has-detail-errors\": blueprintUIMap[blueprint.id].anyDetails,\n                        errors: blueprintUIMap[blueprint.id]?.errors || [],\n                        \"combined-consent\": _ctx.combinedConsent,\n                        onConsentUpdated: passConsentUpdateToParent\n                    }, null, 8, [\"blueprint\", \"extraction-state\", \"extraction-message\", \"extraction-error-text\", \"extraction-outcome\", \"has-detail-errors\", \"errors\", \"combined-consent\"]));\n                }), 128))\n            ], 64));\n        };\n    }\n});\n","import script from \"./ExtractionOverview.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ExtractionOverview.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const UPLOADER_STATES = {\n    IDLE: 'idle',\n    PROCESSING: 'processing',\n    DONE: 'done'\n};\n","import { defineComponent as _defineComponent } from 'vue';\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, unref as _unref, toDisplayString as _toDisplayString, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = { class: \"d-lg-flex flex-row align-items-center justify-content-between\" };\nconst _hoisted_2 = { class: \"pe-5 pb-0 d-flex align-items-center\" };\nconst _hoisted_3 = { class: \"section-icon\" };\nconst _hoisted_4 = {\n    key: 0,\n    class: \"bi bi-check-square fs-2 pe-3 text-success\"\n};\nconst _hoisted_5 = {\n    key: 1,\n    class: \"bi bi-upload fs-2 pe-3\"\n};\nconst _hoisted_6 = { class: \"section-heading\" };\nconst _hoisted_7 = { class: \"flex-grow-1\" };\nconst _hoisted_8 = { class: \"mb-0\" };\nconst _hoisted_9 = {\n    key: 0,\n    class: \"ps-2 fw-bold fs-6\"\n};\nconst _hoisted_10 = {\n    key: 1,\n    class: \"ps-2 fw-bold fs-6\"\n};\nconst _hoisted_11 = [\"accept\"];\nconst _hoisted_12 = {\n    key: 1,\n    class: \"d-flex align-items-center justify-content-center p-4\"\n};\nconst _hoisted_13 = { class: \"mb-0\" };\nconst _hoisted_14 = {\n    key: 2,\n    class: \"p-4\"\n};\nconst _hoisted_15 = { key: 0 };\nconst _hoisted_16 = { class: \"fs-5 fw-bold text-success\" };\nconst _hoisted_17 = { key: 1 };\nconst _hoisted_18 = { class: \"fs-5 fw-bold color-red\" };\nconst _hoisted_19 = { key: 0 };\nconst _hoisted_20 = { class: \"pt-2\" };\nconst _hoisted_21 = { key: 2 };\nconst _hoisted_22 = { class: \"fs-5 fw-bold\" };\nconst _hoisted_23 = {\n    key: 0,\n    class: \"pt-2 w-100 text-center\"\n};\nimport { onMounted, toRef, ref, watch, computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nimport { UPLOADER_STATES } from \"@uploader/types/UploaderState\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'FileDrop',\n    props: {\n        expectsZip: { type: Boolean },\n        uploaderState: {},\n        extractionState: {},\n        generalErrors: {}\n    },\n    emits: [\"fileDropped\"],\n    setup(__props, { emit: __emit }) {\n        /**\n         * Component: FileDrop\n         *\n         * This component handles file uploads through both drag-and-drop and file picker inputs.\n         * It provides visual feedback for different processing states (idle, processing, done),\n         * supports retrying a file upload, and displays errors if extraction fails.\n         *\n         * Features:\n         * - Drag-and-drop file upload area with hover effects.\n         * - File picker when clicking the drop zone.\n         * - Shows different UI states based on the processor and extraction status:\n         *   - Idle: Prompt user to drop/select a file.\n         *   - Processing: Display a loading spinner.\n         *   - Done: Show success, failure, or no-data messages.\n         * - Allows retrying file uploads after failure or success.\n         * - Displays localized error messages for general extraction errors.\n         * - Adapts accepted file types dynamically (e.g., ZIP files if needed).\n         *\n         * Props:\n         * - expectsZip (boolean): Whether the component should only accept .zip files as uploads.\n         * - uploaderState (UploaderState): Current state of the uploader ('idle', 'processing', 'done').\n         * - extractionState (ExtractionStates): Outcome of the extraction process.\n         * - generalErrors (ProcessingError[]): List of general errors encountered during extraction.\n         *\n         * Emits:\n         * - fileDropped(file: File): Triggered when the user selects or drops a new file.\n         *\n         * Internal Utilities:\n         * - initialize(): Sets up accepted file input types based on props.\n         * - handleDrop(event: DragEvent): Handles files dropped into the area.\n         * - handleFileInput(event: Event): Handles file selection via input element.\n         *\n         * Dependencies:\n         * - vue-i18n: For translation and localization of all user-facing text.\n         */\n        const { t, locale } = useI18n();\n        const props = __props;\n        const emit = __emit;\n        const isDragging = ref(false);\n        const retryRequested = ref(false);\n        const acceptedFileInput = ref('');\n        const extractionState = toRef(props, 'extractionState');\n        const fileSelectorBorderClass = ref('bg-lightgrey');\n        onMounted(() => {\n            initialize();\n        });\n        const borderClassMap = {\n            [EXTRACTION_STATES.SUCCESS]: 'border-success',\n            [EXTRACTION_STATES.PARTIAL]: 'border-success',\n            [EXTRACTION_STATES.FAILED]: 'border-failed',\n            [EXTRACTION_STATES.NO_DATA]: 'border-no-data',\n            [EXTRACTION_STATES.PENDING]: 'bg-lightgrey'\n        };\n        watch(extractionState, (val) => {\n            fileSelectorBorderClass.value = borderClassMap[val];\n        });\n        /**\n         * Initializes the component's file input settings based on props.\n         *\n         * Sets the accepted file types for the file input element based on\n         * whether the component expects ZIP files or other formats.\n         */\n        function initialize() {\n            if (props.expectsZip) {\n                acceptedFileInput.value = '.zip,application/zip,application/x-zip-compressed,multipart/x-zip';\n            }\n            else {\n                acceptedFileInput.value = 'application/json,text/csv,.csv,.json';\n            }\n        }\n        /**\n         * Handles file drop events when users drag and drop files onto the component.\n         *\n         * Prevents default browser behavior, extracts the file from the drop event,\n         * and emits the fileDropped event with the selected file.\n         *\n         * @param event - The drag event containing dropped files\n         */\n        function handleDrop(event) {\n            event.preventDefault();\n            isDragging.value = false;\n            const files = event.dataTransfer?.files;\n            if (files?.[0]) {\n                retryRequested.value = false;\n                emit('fileDropped', files[0]);\n            }\n        }\n        function handleFileInput(event) {\n            const input = event.target;\n            const files = input.files;\n            if (!files || files.length === 0)\n                return;\n            const file = files[0];\n            retryRequested.value = false;\n            emit('fileDropped', file);\n        }\n        /**\n         * Resets the uploader to allow selecting a new file.\n         *\n         * This function:\n         * 1. Sets the retryRequested flag to show the file selection UI\n         * 2. Resets the background styling to the default state\n         */\n        function resetUploader() {\n            retryRequested.value = true;\n            fileSelectorBorderClass.value = 'bg-lightgrey';\n        }\n        const showFileSelector = computed(() => props.uploaderState === UPLOADER_STATES.IDLE || retryRequested.value);\n        const showProcessingIndicator = computed(() => props.uploaderState === UPLOADER_STATES.PROCESSING);\n        const showResults = computed(() => props.uploaderState === UPLOADER_STATES.DONE);\n        const showRetryButton = computed(() => props.uploaderState === UPLOADER_STATES.DONE &&\n            props.extractionState !== EXTRACTION_STATES.FAILED &&\n            !retryRequested.value);\n        const extractionSuccess = computed(() => props.extractionState === EXTRACTION_STATES.SUCCESS ||\n            props.extractionState === EXTRACTION_STATES.PARTIAL);\n        const extractionFailed = computed(() => props.extractionState === EXTRACTION_STATES.FAILED);\n        const extractionNoData = computed(() => props.extractionState === EXTRACTION_STATES.NO_DATA);\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n                _createElementVNode(\"div\", _hoisted_2, [\n                    _createElementVNode(\"span\", _hoisted_3, [\n                        (['success', 'partial'].includes(props.extractionState))\n                            ? (_openBlock(), _createElementBlock(\"i\", _hoisted_4))\n                            : (_openBlock(), _createElementBlock(\"i\", _hoisted_5))\n                    ]),\n                    _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_unref(t)(\"file-drop.heading\")), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", {\n                        class: _normalizeClass([\"border rounded text-center position-relative bg-lightgrey\", fileSelectorBorderClass.value])\n                    }, [\n                        (showFileSelector.value)\n                            ? (_openBlock(), _createElementBlock(\"div\", {\n                                key: 0,\n                                class: _normalizeClass([\"p-4\", { 'dropzone-hover': isDragging.value }]),\n                                onDragover: _cache[0] || (_cache[0] = _withModifiers(($event) => (isDragging.value = true), [\"prevent\"])),\n                                onDragleave: _cache[1] || (_cache[1] = _withModifiers(($event) => (isDragging.value = false), [\"prevent\"])),\n                                onDrop: handleDrop,\n                                onClick: _cache[2] || (_cache[2] = ($event) => (_ctx.$refs.fileInput.click())),\n                                style: { \"cursor\": \"pointer\" }\n                            }, [\n                                _createElementVNode(\"p\", _hoisted_8, [\n                                    _cache[3] || (_cache[3] = _createElementVNode(\"i\", {\n                                        id: \"ul-modal-info-icon\",\n                                        class: \"bi bi-upload fs-5 pe-3\"\n                                    }, null, -1)),\n                                    (!isDragging.value)\n                                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, _toDisplayString(_unref(t)('file-drop.selection-prompt')), 1))\n                                        : _createCommentVNode(\"\", true),\n                                    (isDragging.value)\n                                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(_unref(t)('file-drop.release-to-select')), 1))\n                                        : _createCommentVNode(\"\", true)\n                                ]),\n                                _createElementVNode(\"input\", {\n                                    ref: \"fileInput\",\n                                    type: \"file\",\n                                    class: \"d-none\",\n                                    accept: acceptedFileInput.value,\n                                    onChange: handleFileInput\n                                }, null, 40, _hoisted_11)\n                            ], 34))\n                            : (showProcessingIndicator.value)\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                                    _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n                                        class: \"spinner-border float-right me-3\",\n                                        role: \"status\"\n                                    }, [\n                                        _createElementVNode(\"span\", { class: \"sr-only\" })\n                                    ], -1)),\n                                    _createElementVNode(\"p\", _hoisted_13, _toDisplayString(_unref(t)('file-drop.file-is-being-processed')), 1)\n                                ]))\n                                : (showResults.value)\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                                        (extractionSuccess.value)\n                                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                                                _createElementVNode(\"p\", _hoisted_16, [\n                                                    _cache[5] || (_cache[5] = _createElementVNode(\"i\", { class: \"bi bi-check-circle pe-3\" }, null, -1)),\n                                                    _createTextVNode(_toDisplayString(_unref(t)('file-drop.processing-success')), 1)\n                                                ]),\n                                                _createTextVNode(\" \" + _toDisplayString(_unref(t)('extraction-state.file.success')), 1)\n                                            ]))\n                                            : (extractionFailed.value)\n                                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                                                    _createElementVNode(\"p\", _hoisted_18, _toDisplayString(_unref(t)('file-drop.processing-failed')), 1),\n                                                    (props.generalErrors.length)\n                                                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.generalErrors, (error, i) => {\n                                                                return (_openBlock(), _createElementBlock(\"p\", {\n                                                                    key: i,\n                                                                    class: \"pt-3 color-darkred\"\n                                                                }, _toDisplayString(_unref(t)(error.i18nDetail, error.context)), 1));\n                                                            }), 128))\n                                                        ]))\n                                                        : _createCommentVNode(\"\", true),\n                                                    _createElementVNode(\"p\", _hoisted_20, [\n                                                        _createTextVNode(_toDisplayString(_unref(t)('file-drop.retry-hint')) + \" \", 1),\n                                                        _createElementVNode(\"a\", {\n                                                            class: \"btn re-try-btn fs-6\",\n                                                            onClick: resetUploader\n                                                        }, _toDisplayString(_unref(t)('file-drop.choose-different-file')), 1)\n                                                    ])\n                                                ]))\n                                                : (extractionNoData.value)\n                                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                                                        _createElementVNode(\"p\", _hoisted_22, _toDisplayString(_unref(t)('file-drop.processing-complete')), 1),\n                                                        _createTextVNode(\" \" + _toDisplayString(_unref(t)('extraction-state.file.no-data-extracted')), 1)\n                                                    ]))\n                                                    : _createCommentVNode(\"\", true)\n                                    ]))\n                                    : _createCommentVNode(\"\", true)\n                    ], 2),\n                    (showRetryButton.value)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n                            _createElementVNode(\"a\", {\n                                class: \"btn re-try-btn fs-6\",\n                                onClick: resetUploader\n                            }, _toDisplayString(_unref(t)('file-drop.choose-different-file')), 1)\n                        ]))\n                        : _createCommentVNode(\"\", true)\n                ])\n            ]));\n        };\n    }\n});\n","import script from \"./FileDrop.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FileDrop.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FileDrop.vue?vue&type=style&index=0&id=6b88704e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b88704e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue';\nimport { createElementVNode as _createElementVNode, unref as _unref, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = { class: \"d-flex align-items-center\" };\nconst _hoisted_2 = { class: \"section-heading\" };\nconst _hoisted_3 = { class: \"d-flex flex-row align-items-center carousel\" };\nconst _hoisted_4 = { class: \"control-container\" };\nconst _hoisted_5 = { class: \"carousel-inner\" };\nconst _hoisted_6 = { class: \"control-container\" };\nconst _hoisted_7 = { class: \"text-center\" };\nconst _hoisted_8 = [\"aria-label\", \"onClick\"];\nimport { computed, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'Instructions',\n    props: {\n        instructions: {},\n        componentId: {}\n    },\n    setup(__props) {\n        /**\n         * Component: Instructions\n         *\n         * This component displays a step-based instruction carousel.\n         *\n         * Props:\n         * - `instructions`: An array of instruction objects containing HTML-formatted text.\n         * - `componentId`: A unique identifier used to scope DOM elements (important for multiple instances).\n         *\n         * Features:\n         * - Uses Bootstrap carousel styles without auto-sliding behavior.\n         * - Fully reactive, supports transitions between steps.\n         * - Displays step indicator buttons for navigation.\n         */\n        const { t, locale } = useI18n();\n        const props = __props;\n        const currentStep = ref(0);\n        function stepDown() {\n            if (currentStep.value > 0) {\n                currentStep.value--;\n            }\n        }\n        function stepUp() {\n            if (currentStep.value < props.instructions.length - 1) {\n                currentStep.value++;\n            }\n        }\n        function setStep(step) {\n            currentStep.value = step;\n        }\n        const canStepDown = computed(() => currentStep.value > 0);\n        const canStepUp = computed(() => currentStep.value < props.instructions.length - 1);\n        const currentInstruction = computed(() => props.instructions[currentStep.value].text);\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, [\n                    _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"section-icon\" }, [\n                        _createElementVNode(\"i\", { class: \"bi bi-list-ol\" })\n                    ], -1)),\n                    _createElementVNode(\"span\", _hoisted_2, _toDisplayString(_unref(t)(\"instructions.heading\")), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_3, [\n                    _createElementVNode(\"div\", _hoisted_4, [\n                        (canStepDown.value)\n                            ? (_openBlock(), _createElementBlock(\"a\", {\n                                key: 0,\n                                onClick: stepDown,\n                                class: _normalizeClass([\"control-btn control-prev\", { 'btn-disabled': currentStep.value === 0 }])\n                            }, _cache[1] || (_cache[1] = [\n                                _createElementVNode(\"i\", { class: \"bi bi-caret-left-fill\" }, null, -1),\n                                _createElementVNode(\"span\", { class: \"visually-hidden\" }, \"Previous\", -1)\n                            ]), 2))\n                            : _createCommentVNode(\"\", true)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_5, [\n                        _createVNode(_Transition, {\n                            name: \"fade\",\n                            mode: \"out-in\"\n                        }, {\n                            default: _withCtx(() => [\n                                (_openBlock(), _createBlock(_resolveDynamicComponent('div'), {\n                                    key: currentStep.value,\n                                    class: \"carousel-item active\",\n                                    innerHTML: currentInstruction.value\n                                }, null, 8, [\"innerHTML\"]))\n                            ]),\n                            _: 1\n                        })\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_6, [\n                        (canStepUp.value)\n                            ? (_openBlock(), _createElementBlock(\"a\", {\n                                key: 0,\n                                onClick: stepUp,\n                                class: _normalizeClass([\"control-btn control-next\", { 'btn-disabled': currentStep.value === props.instructions.length - 1 }])\n                            }, _cache[2] || (_cache[2] = [\n                                _createElementVNode(\"i\", { class: \"bi bi-caret-right-fill\" }, null, -1),\n                                _createElementVNode(\"span\", { class: \"visually-hidden\" }, \"Next\", -1)\n                            ]), 2))\n                            : _createCommentVNode(\"\", true)\n                    ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_7, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.instructions, (i, index) => {\n                        return (_openBlock(), _createElementBlock(\"button\", {\n                            key: index,\n                            type: \"button\",\n                            class: _normalizeClass([\"step-indicator\", { 'active step-indicator-active': index === currentStep.value }]),\n                            \"aria-label\": `Slide ${index + 1}`,\n                            onClick: ($event) => (setStep(index))\n                        }, null, 10, _hoisted_8));\n                    }), 128))\n                ])\n            ], 64));\n        };\n    }\n});\n","import script from \"./Instructions.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Instructions.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./Instructions.vue?vue&type=style&index=0&id=5a0b4e47&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5a0b4e47\"]])\n\nexport default __exports__","import { ref } from \"vue\";\n/**\n * Composable: useConsentManager\n *\n * Manages user consent for blueprint data extraction and submission.\n * Handles both individual blueprint consent and combined consent modes.\n *\n * Features:\n * - Initializes consent state for all blueprints\n * - Updates consent for individual blueprints or all blueprints at once\n * - Maintains reactive consent state\n *\n * @param blueprintConfigs - Array of blueprint configurations\n * @param combinedConsent - Whether to use combined consent mode (true) or per-blueprint consent (false)\n *\n * @returns {Object} An object containing:\n *   - blueprintConsentMap: Reactive map of blueprint IDs to consent status\n *   - updateConsent: Function to update consent state\n *\n * Usage:\n * ```\n * const { blueprintConsentMap, updateConsent } = useConsentManager(blueprints, true);\n *\n * // Update consent for all blueprints in combined mode\n * updateConsent(true, null);\n *\n * // Update consent for a specific blueprint\n * updateConsent(false, 123);\n * ```\n */\nexport function useConsentManager(blueprintConfigs, combinedConsent) {\n    const blueprintConsentMap = ref(initializeConsentMap());\n    /**\n     * Initializes the consent map with null values for all blueprints.\n     *\n     * @returns A record mapping blueprint IDs to initial consent values (null)\n     */\n    function initializeConsentMap() {\n        const consentMap = {};\n        for (const blueprint of blueprintConfigs) {\n            consentMap[blueprint.id] = null;\n        }\n        return consentMap;\n    }\n    /**\n     * Updates consent values in the blueprint consent map.\n     *\n     * In combined consent mode, this updates all blueprint consent values.\n     * In individual consent mode, this updates only the specified blueprint.\n     *\n     * @param consent - The consent value to set (true for granted, false for denied)\n     * @param blueprintId - The ID of the blueprint to update, or null for combined consent\n     */\n    const updateConsent = (consent, blueprintId) => {\n        if (combinedConsent) {\n            for (const key of Object.keys(blueprintConsentMap.value)) {\n                blueprintConsentMap.value[key] = consent;\n            }\n        }\n        else {\n            if (blueprintId === null) {\n                console.warn('Attempted to update consent for null blueprintId in individual consent mode');\n                return;\n            }\n            if (!(blueprintId in blueprintConsentMap.value)) {\n                console.warn(`Attempted to update consent for unknown blueprint ID: ${blueprintId}`);\n                return;\n            }\n            blueprintConsentMap.value[blueprintId] = consent;\n        }\n    };\n    return {\n        blueprintConsentMap,\n        updateConsent\n    };\n}\n","export const ERROR_LEVELS = {\n    INFO: 'info',\n    WARN: 'warn',\n    CRITICAL: 'critical',\n};\nexport const ERROR_SCOPES = {\n    FILE: 'file',\n    BLUEPRINT: 'blueprint',\n};\nexport const ERROR_CATEGORIES = {\n    ZIP_HANDLING: 'ZIP handling error',\n    FILE_PROCESSING: 'File processing error',\n    BLUEPRINT_SPECIFICATION: 'Blueprint specification error',\n    EXTRACTION: 'Extraction error'\n};\n","import { ref } from 'vue';\nimport { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nimport { ERROR_LEVELS } from \"@uploader/types/ProcessingError\";\n/**\n * useExtractionStateTracker\n *\n * A Vue composable that evaluates and tracks the state of data extraction processes.\n * It analyzes the success, failure, or partial completion of extraction operations\n * across multiple blueprints and provides a consolidated view of the extraction status.\n *\n * The composable handles:\n * - Tracking overall extraction state (success, partial, failed, no data)\n * - Monitoring individual blueprint extraction states\n * - Filtering and organizing critical errors for display\n * - Providing reactive state properties for UI components\n *\n * @param errors - Array of processing errors encountered during extraction\n * @param results - Object mapping blueprint IDs to their extraction outcomes\n *\n * @returns An object containing:\n *   - extractionState: Reactive reference to the overall extraction state\n *   - generalErrorsToDisplay: Reactive array of critical errors for display\n *   - blueprintExtractionStates: Reactive object with per-blueprint state details\n *   - getExtractionState: Function to evaluate and update extraction states\n */\nexport function useExtractionStateTracker(errors, results) {\n    const extractionState = ref(EXTRACTION_STATES.PENDING);\n    const generalErrorsToDisplay = ref([]);\n    const blueprintExtractionStates = ref({});\n    /**\n     * Initializes the blueprint extraction states map with pending states.\n     *\n     * This function is called on composable creation to set up initial state\n     * for all blueprints found in the results object.\n     */\n    function initialize() {\n        for (const blueprintId of Object.keys(results)) {\n            blueprintExtractionStates.value[blueprintId] = { state: EXTRACTION_STATES.PENDING, i18nState: null, errorsToDisplay: [] };\n        }\n    }\n    /**\n     * Resets all state tracking to initial values.\n     *\n     * This function clears the current state before a new evaluation,\n     * ensuring that old states don't affect new evaluations.\n     */\n    function resetState() {\n        extractionState.value = EXTRACTION_STATES.PENDING;\n        generalErrorsToDisplay.value = [];\n        blueprintExtractionStates.value = {};\n    }\n    /**\n     * Evaluates the final state of a processing session based on encountered errors and extraction results.\n     *\n     * This function coordinates the complete evaluation process by:\n     * 1. Resetting the current state tracking\n     * 2. Processing general critical errors\n     * 3. Evaluating individual blueprint states\n     * 4. Determining the overall extraction state\n     *\n     * This is the main entry point for state evaluation and should be called\n     * whenever the underlying data changes.\n     */\n    function getExtractionState() {\n        resetState();\n        processGeneralErrors();\n        evaluateBlueprintStates();\n        evaluateOverallState();\n    }\n    /**\n     * Identifies and collects critical errors from the general errors list.\n     *\n     * Critical errors at this level typically indicate issues that affected\n     * the entire extraction process rather than specific blueprints.\n     */\n    function processGeneralErrors() {\n        for (const error of errors) {\n            if (error.level === ERROR_LEVELS.CRITICAL) {\n                generalErrorsToDisplay.value.push(error);\n            }\n        }\n    }\n    /**\n     * Evaluates the extraction state for each individual blueprint.\n     *\n     * Iterates through all blueprints in the results object and determines\n     * their extraction state based on success, errors, and data presence.\n     */\n    function evaluateBlueprintStates() {\n        for (const [blueprintId, result] of Object.entries(results)) {\n            blueprintExtractionStates.value[blueprintId] = getBlueprintState(result);\n        }\n    }\n    /**\n     * Determines the overall extraction state based on blueprint states and general errors.\n     *\n     * This function synthesizes the individual blueprint states into a single\n     * overall state that represents the extraction process as a whole.\n     *\n     * Priority order:\n     * 1. If general critical errors exist, the state is FAILED\n     * 2. Otherwise, determine state based on blueprint success/failure patterns\n     */\n    function evaluateOverallState() {\n        if (generalErrorsToDisplay.value.length > 0) {\n            extractionState.value = EXTRACTION_STATES.FAILED;\n            return;\n        }\n        const nBlueprints = Object.keys(blueprintExtractionStates.value).length;\n        const nSuccess = getStateCount(EXTRACTION_STATES.SUCCESS);\n        const nNoData = getStateCount(EXTRACTION_STATES.NO_DATA);\n        const nFailed = getStateCount(EXTRACTION_STATES.FAILED);\n        extractionState.value = determineOverallState(nBlueprints, nSuccess, nNoData, nFailed);\n    }\n    /**\n     * Calculates the overall state based on blueprint state counts.\n     *\n     * @param total - Total number of blueprints\n     * @param success - Number of blueprints with successful extraction\n     * @param noData - Number of blueprints with no extracted data\n     * @param failed - Number of blueprints with extraction failures\n     * @returns The appropriate overall extraction state\n     */\n    function determineOverallState(total, success, noData, failed) {\n        if (success === total)\n            return EXTRACTION_STATES.SUCCESS;\n        if (noData === total)\n            return EXTRACTION_STATES.NO_DATA;\n        if (failed === total)\n            return EXTRACTION_STATES.FAILED;\n        return EXTRACTION_STATES.PARTIAL;\n    }\n    /**\n     * Analyzes a single blueprint's extraction result to determine its state.\n     *\n     * This function performs a detailed analysis of a blueprint's extraction outcome by:\n     * - Checking for critical errors during extraction\n     * - Evaluating the amount of data successfully extracted\n     * - Analyzing why data might be missing (missing fields, filtering, etc.)\n     *\n     * Based on this analysis, it determines the appropriate state and provides\n     * internationalization keys for user-facing messages.\n     *\n     * @param blueprintOutcome - The extraction outcome object to analyze\n     * @returns A BlueprintDetailState object with state, i18n key, and errors\n     */\n    function getBlueprintState(blueprintOutcome) {\n        let state = EXTRACTION_STATES.PENDING;\n        let i18nState = null;\n        const criticalErrors = blueprintOutcome.processingErrors.filter(error => error.level === ERROR_LEVELS.CRITICAL);\n        if (criticalErrors.length > 0) {\n            state = EXTRACTION_STATES.FAILED;\n            i18nState = 'extraction-state.blueprint.failed';\n        }\n        // Evaluate extraction state.\n        const nExtracted = blueprintOutcome.extractedData.length;\n        const stats = blueprintOutcome.extractionStats;\n        const ratioMissing = stats.nRowsTotal > 0\n            ? stats.nRowsMissingField / stats.nRowsTotal\n            : 0;\n        const ratioFilteredOut = stats.nRowsTotal > 0\n            ? stats.nRowsFilteredOut / stats.nRowsTotal\n            : 0;\n        if (nExtracted === 0 && criticalErrors.length === 0) {\n            state = EXTRACTION_STATES.NO_DATA;\n            if (ratioMissing === 1) {\n                i18nState = 'extraction-state.blueprint.all-missing-fields';\n            }\n            else if (ratioFilteredOut === 1) {\n                i18nState = 'extraction-state.blueprint.all-filtered-out';\n            }\n            else {\n                i18nState = 'extraction-state.blueprint.no-data-extracted';\n            }\n        }\n        else if (criticalErrors.length === 0) {\n            state = EXTRACTION_STATES.SUCCESS;\n            i18nState = 'extraction-state.blueprint.success';\n        }\n        return { state: state, i18nState: i18nState, errorsToDisplay: criticalErrors };\n    }\n    /**\n     * Counts how many blueprints have a specific extraction state.\n     *\n     * This helper function is used to calculate how many blueprints\n     * succeeded, failed, or had no data, which is needed to determine\n     * the overall extraction state.\n     *\n     * @param targetState - The extraction state to count\n     * @returns The number of blueprints with the specified state\n     */\n    function getStateCount(targetState) {\n        return Object.values(blueprintExtractionStates.value)\n            .filter(state => state.state === targetState)\n            .length;\n    }\n    initialize();\n    return {\n        extractionState,\n        generalErrorsToDisplay,\n        blueprintExtractionStates,\n        getExtractionState\n    };\n}\n","/**\n * Class: BlueprintExtractionOutcome\n *\n * Represents the outcome of processing a blueprint within the uploader system.\n * Tracks extracted data, stats, rule usage logs, field mappings, and any\n * processing errors encountered.\n *\n * Constructor:\n *  - Accepts a Blueprint object and initializes internal tracking structures.\n *\n * Main Features:\n *  - Logs rule application stats.\n *  - Maps extracted fields to rule-defined fields.\n *  - Collects detailed error records with contextual information.\n *  - Tracks unmatchable fields for audit/debugging.\n *\n * Fields:\n *  - blueprintId: ID of the blueprint being processed.\n *  - extractedData: Array of rows or objects extracted from input.\n *  - extractedFieldsMap: Maps field names to the extraction rule field they came from.\n *  - extractionStats: Summary of rows with missing fields, (filtered) row counts and unmatched keys.\n *  - extractionRuleLog: Records how many times each extraction rule was triggered.\n *  - processingErrors: Collected error metadata for review and logging.\n */\nexport class BlueprintExtractionOutcome {\n    constructor(blueprint) {\n        this.blueprintId = blueprint.id;\n        this.extractedData = [];\n        this.extractedFieldsMap = new Map();\n        this.extractionStats = {\n            nRowsMissingField: 0,\n            nRowsFilteredOut: 0,\n            nRowsTotal: 0,\n            noKeyMatches: {}\n        };\n        this.extractionRuleLog = this.initializeExtractionRuleLog(blueprint.extraction_rules);\n        this.processingErrors = [];\n    }\n    initializeExtractionRuleLog(extractionRules) {\n        return Object.fromEntries(extractionRules.map(rule => [rule.id, 0]));\n    }\n    /**\n     * Increments statistics for a row that was filtered out during extraction.\n     *\n     * When rows don't meet extraction criteria, this method updates the relevant counters\n     * and logs which extraction rule triggered the filtering.\n     *\n     * @param extractionRule - The rule that determined the row should be discarded\n     */\n    incrementExtractionRuleCount(extractionRule) {\n        this.extractionStats.nRowsFilteredOut += 1;\n        this.extractionRuleLog[extractionRule.id] += 1;\n    }\n    /**\n     * Records instances where expected fields couldn't be matched with available fields for debugging and analysis purposes.\n     *\n     * @param expectedField - The field name that was expected but not found\n     * @param availableFields - List of fields that were available for matching\n     */\n    registerNoKeyMatch(expectedField, availableFields) {\n        if (!this.extractionStats.noKeyMatches[expectedField]) {\n            this.extractionStats.noKeyMatches[expectedField] = {};\n        }\n        const lookupKey = JSON.stringify([...availableFields].sort()); // e.g., \"['availableFieldA', 'availableFieldB']\"\n        if (!this.extractionStats.noKeyMatches[expectedField][lookupKey]) {\n            this.extractionStats.noKeyMatches[expectedField][lookupKey] = 0;\n        }\n        this.extractionStats.noKeyMatches[expectedField][lookupKey] += 1;\n    }\n    /**\n     * Adds an occurred error to the processingErrors array.\n     *\n     * @param error - the ProcessingError that occurred.\n     * @param context - a dictionary holding context information used to render the error description (see errorCatalog\n     *                  for details on the expected context for each error).\n     */\n    registerError(error, context) {\n        this.processingErrors.push({\n            type: error.type,\n            category: error.category,\n            scope: error.scope,\n            i18nDetail: error.i18nDetail,\n            level: error.level,\n            context: { ...error.context, ...context, blueprintId: this.blueprintId }\n        });\n    }\n    /**\n     * Associates an extracted field name with its corresponding rule-defined field.\n     *\n     * Maintains a mapping between field names found in the data and their formal definitions\n     * in extraction rules. The first mapping for each field is preserved.\n     *\n     * @param extractedField - The field name as found in the extracted data\n     * @param ruleField - The formal field name from the extraction rule\n     */\n    mapExtractedField(extractedField, ruleField) {\n        if (!this.extractedFieldsMap.has(extractedField)) {\n            this.extractedFieldsMap.set(extractedField, ruleField);\n        }\n    }\n}\n","import { ERROR_CATEGORIES, ERROR_LEVELS, ERROR_SCOPES } from \"@uploader/types/ProcessingError\";\n/**\n * Error Catalog\n *\n * A centralized collection of error definitions for the uploader system.\n * These standardized error objects provide consistent error reporting\n * with proper categorization, severity levels, and i18n support.\n */\nexport const ERROR_CATALOG = {\n    INVALID_ZIP: {\n        type: 'INVALID_ZIP',\n        category: ERROR_CATEGORIES.ZIP_HANDLING,\n        scope: ERROR_SCOPES.FILE,\n        i18nDetail: 'errors.invalid-zip',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            fileType: '[invalid file type]'\n        }\n    },\n    ZIP_READ_FAIL: {\n        type: 'ZIP_READ_FAIL',\n        category: ERROR_CATEGORIES.ZIP_HANDLING,\n        scope: ERROR_SCOPES.FILE,\n        i18nDetail: 'errors.zip-read-fail',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {}\n    },\n    INVALID_REGEX: {\n        type: 'INVALID_REGEX',\n        category: ERROR_CATEGORIES.BLUEPRINT_SPECIFICATION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.invalid-regex',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n        }\n    },\n    INVALID_RULE_REGEX: {\n        type: 'INVALID_RULE_REGEX',\n        category: ERROR_CATEGORIES.EXTRACTION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.invalid-rule-regex',\n        level: ERROR_LEVELS.WARN,\n        context: {\n            blueprintId: '[blueprint ID]',\n            ruleId: '[rule ID]',\n            ruleRegex: '[rule regex]'\n        }\n    },\n    NO_FILE_MATCH: {\n        type: 'NO_FILE_MATCH',\n        category: ERROR_CATEGORIES.EXTRACTION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.no-file-match',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n            regexPath: '[provided regex path]',\n            availableFiles: '[list of files in zip]'\n        }\n    },\n    FILE_PROCESSING_FAIL_GENERAL: {\n        type: 'FILE_PROCESSING_FAIL_GENERAL',\n        category: ERROR_CATEGORIES.FILE_PROCESSING,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.file-processing-fail-general',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n            error: '[the error that occurred]'\n        }\n    },\n    STRING_CONVERSION_ERROR: {\n        type: 'STRING_CONVERSION_ERROR',\n        category: ERROR_CATEGORIES.FILE_PROCESSING,\n        scope: ERROR_SCOPES.FILE,\n        i18nDetail: 'errors.string-conversion-error',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {}\n    },\n    NO_EXTRACTION_RULES: {\n        type: 'NO_EXTRACTION_RULES',\n        category: ERROR_CATEGORIES.BLUEPRINT_SPECIFICATION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.no-extraction-rules',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n        }\n    },\n    PARSING_ERROR: {\n        type: 'PARSING_ERROR',\n        category: ERROR_CATEGORIES.FILE_PROCESSING,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.parsing-error',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n            contentType: '[the type of content it tried to parse]'\n        } // optional: error\n    },\n    UNSUPPORTED_BP_FORMAT: {\n        type: 'UNSUPPORTED_BP_FORMAT',\n        category: ERROR_CATEGORIES.BLUEPRINT_SPECIFICATION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.unsupported-bp-format',\n        level: ERROR_LEVELS.CRITICAL,\n        context: {\n            blueprintId: '[blueprint ID]',\n            format: '[name of unsupported format]'\n        }\n    },\n    MORE_THAN_ONE_KEY_MATCH: {\n        type: 'MORE_THAN_ONE_KEY_MATCH',\n        category: ERROR_CATEGORIES.EXTRACTION,\n        scope: ERROR_SCOPES.BLUEPRINT,\n        i18nDetail: 'errors.more-than-one-key-match',\n        level: ERROR_LEVELS.INFO,\n        context: {\n            blueprintId: '[blueprint ID]',\n            field: '[the field for which multiple matches were found]',\n            keys: '[the keys that were matched]',\n            defaultKey: '[the fallback key used]'\n        }\n    },\n};\n","/**\n * Registers a general error in the provided errors collection.\n *\n * This function takes an error from the error catalog and enhances it with\n * additional context information, then adds it to the specified errors collection.\n * The original error's properties are preserved, with additional context merged in.\n *\n * @param errorsCollection - The array where the error should be registered\n * @param catalogError - The base error definition from the error catalog\n * @param context - Additional contextual information about this specific error instance\n *\n * @example\n * ```typescript\n * // Register a file parsing error with additional context\n * registerGeneralError(\n *   errors,\n *   ERROR_CATALOG.PARSING_ERROR,\n *   { fileName: \"data.csv\", lineNumber: 42 }\n * );\n * ```\n */\nexport function registerGeneralError(errorsCollection, catalogError, context = {}) {\n    const error = {\n        type: catalogError.type,\n        category: catalogError.category,\n        scope: catalogError.scope,\n        i18nDetail: catalogError.i18nDetail,\n        level: catalogError.level,\n        context: { ...catalogError.context, ...context }\n    };\n    errorsCollection.push(error);\n}\n","import { DateTime } from \"luxon\";\n/**\n * Converts any value to its string representation.\n *\n * For string values, returns the original string.\n * For non-string values, converts to JSON string representation.\n *\n * @param v - The value to convert to a string\n * @returns String representation of the value\n */\nexport function getOriginalValueAsString(v) {\n    if (typeof v !== 'string') {\n        return JSON.stringify(v);\n    }\n    else {\n        return v;\n    }\n}\n/**\n * Checks if a value can be interpreted as a number.\n *\n * @param v - The value to check\n * @returns True if the value is a number or can be parsed as a number\n */\nexport function isNumeric(v) {\n    if (typeof v === 'number')\n        return true;\n    if (typeof v != 'string')\n        return false;\n    return !isNaN(parseFloat(v)) && isFinite(Number(v));\n}\n/**\n * Determines if both values can be parsed as valid dates.\n *\n * Checks multiple date formats:\n * - ISO format (e.g., \"2016-05-25T09:24:15.123\", \"2016-05-25\")\n * - RFC2822 format (e.g., \"Tue, 01 Nov 2016 13:23:12 +0630\")\n * - HTTP format (e.g., \"Sunday, 06-Nov-94 08:49:37 GMT\")\n *\n * @param entryValue - First value to check\n * @param comparisonValue - Second value to check\n * @returns True if both values can be parsed as dates in the same format\n */\nexport function bothDates(entryValue, comparisonValue) {\n    try {\n        // Try parsing as ISO date format (e.g., \"2016-05-25T092415.123\", \"2016-05-25\").\n        if (DateTime.fromISO(entryValue).isValid && DateTime.fromISO(comparisonValue).isValid) {\n            return true;\n        }\n        // Try parsing as RFC2822 date format (e.g., \"Tue, 01 Nov 2016 13:23:12 +0630\").\n        if (DateTime.fromRFC2822(entryValue).isValid && DateTime.fromRFC2822(comparisonValue).isValid) {\n            return true;\n        }\n        // Try parsing as HTTP date format (e.g., \"Sunday, 06-Nov-94 08:49:37 GMT\").\n        if (DateTime.fromHTTP(entryValue).isValid && DateTime.fromHTTP(comparisonValue).isValid) {\n            return true;\n        }\n        return false;\n    }\n    catch (error) {\n        console.warn(\"[bothDates] Error checking date formats:\", error);\n        return false;\n    }\n}\n/**\n * Parses two values as dates, returning DateTime objects.\n *\n * Attempts to parse using multiple date formats, returning null values\n * if the inputs cannot be parsed as dates.\n *\n * @param entryValue - First value to parse\n * @param comparisonValue - Second value to parse\n * @returns Array containing the two parsed DateTime objects, or null if parsing fails\n */\nexport function getDates(entryValue, comparisonValue) {\n    try {\n        if (DateTime.fromISO(entryValue).isValid && DateTime.fromISO(comparisonValue).isValid) {\n            return [DateTime.fromISO(entryValue), DateTime.fromISO(comparisonValue)];\n        }\n        if (DateTime.fromRFC2822(entryValue).isValid && DateTime.fromRFC2822(comparisonValue).isValid) {\n            return [DateTime.fromRFC2822(entryValue), DateTime.fromRFC2822(comparisonValue)];\n        }\n        if (DateTime.fromHTTP(entryValue).isValid && DateTime.fromHTTP(comparisonValue).isValid) {\n            return [DateTime.fromHTTP(entryValue), DateTime.fromHTTP(comparisonValue)];\n        }\n    }\n    catch (error) {\n        console.warn(`[getDates] Error parsing dates: ${error}`);\n    }\n    return [null, null];\n}\n/**\n * Prepares two values for comparison by converting them to compatible types.\n *\n * - If both values are dates, converts them to DateTime objects\n * - If both values are numeric, converts them to numbers\n * - Otherwise, converts both to strings\n *\n * @param entryValue - First value to prepare\n * @param comparisonValue - Second value to prepare\n * @returns Array containing the two prepared values\n */\nexport function prepareValues(entryValue, comparisonValue) {\n    if (bothDates(entryValue, comparisonValue)) {\n        const [dateEntry, dateComparison] = getDates(entryValue, comparisonValue);\n        return [dateEntry, dateComparison];\n    }\n    else if (isNumeric(entryValue) && isNumeric(comparisonValue)) {\n        return [parseFloat(entryValue), parseFloat(comparisonValue)];\n    }\n    else {\n        entryValue = getOriginalValueAsString(entryValue);\n        comparisonValue = getOriginalValueAsString(comparisonValue);\n    }\n    return [entryValue, comparisonValue];\n}\n/**\n * Checks if two values are equal after conversion to strings.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if the string representations are equal\n */\nexport function valueIsEqual(entryValue, comparisonValue) {\n    try {\n        entryValue = getOriginalValueAsString(entryValue);\n        comparisonValue = getOriginalValueAsString(comparisonValue);\n        return entryValue === comparisonValue;\n    }\n    catch (error) {\n        console.warn(\"Error comparing values for equality:\", error);\n        return false;\n    }\n}\n/**\n * Checks if two values are not equal after conversion to strings.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if the string representations are not equal\n */\nexport function valueIsNotEqual(entryValue, comparisonValue) {\n    try {\n        entryValue = getOriginalValueAsString(entryValue);\n        comparisonValue = getOriginalValueAsString(comparisonValue);\n        return entryValue !== comparisonValue;\n    }\n    catch (error) {\n        console.warn(\"Error comparing values for inequality:\", error);\n        return false;\n    }\n}\n/**\n * Base comparison function that applies a comparator to prepared values.\n * Ensures that comparison is only done if both values are dates or both values are numbers.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @param comparator - Function that defines the comparison logic\n * @returns Result of the comparison, or false if values cannot be compared\n */\nexport function compareValues(entryValue, comparisonValue, comparator) {\n    try {\n        if (bothDates(entryValue, comparisonValue) ||\n            (isNumeric(entryValue) && isNumeric(comparisonValue))) {\n            const [preparedEntry, preparedComparison] = prepareValues(entryValue, comparisonValue);\n            // Ensure we have valid values to compare\n            if (preparedEntry === null || preparedComparison === null) {\n                return false;\n            }\n            return comparator(preparedEntry, preparedComparison);\n        }\n    }\n    catch (error) {\n        console.warn(\"Error comparing values:\", error);\n    }\n    return false;\n}\n/**\n * Checks if the first value is less than or equal to the second value.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if entryValue ≤ comparisonValue\n */\nexport function valueIsSmallerOrEqual(entryValue, comparisonValue) {\n    return compareValues(entryValue, comparisonValue, (a, b) => a <= b);\n}\n/**\n * Checks if the first value is greater than or equal to the second value.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if entryValue ≥ comparisonValue\n */\nexport function valueIsGreaterOrEqual(entryValue, comparisonValue) {\n    return compareValues(entryValue, comparisonValue, (a, b) => a >= b);\n}\n/**\n * Checks if the first value is less than the second value.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if entryValue < comparisonValue\n */\nexport function valueIsSmaller(entryValue, comparisonValue) {\n    return compareValues(entryValue, comparisonValue, (a, b) => a < b);\n}\n/**\n * Checks if the first value is greater than the second value.\n *\n * @param entryValue - First value to compare\n * @param comparisonValue - Second value to compare\n * @returns True if entryValue > comparisonValue\n */\nexport function valueIsGreater(entryValue, comparisonValue) {\n    return compareValues(entryValue, comparisonValue, (a, b) => a > b);\n}\n/**\n * Removes all matches of a regular expression from a string value.\n *\n * @param entryValue - The value to process\n * @param comparisonValue - Regular expression pattern as string\n * @returns String with matches removed, or original string if an error occurs\n */\nexport function regexDeleteMatch(entryValue, comparisonValue) {\n    const originalValue = getOriginalValueAsString(entryValue);\n    const comparisonRegExp = RegExp(comparisonValue, 'g');\n    return originalValue.replaceAll(comparisonRegExp, '');\n}\n/**\n * Replaces all matches of a regular expression with a replacement value.\n *\n * @param entryValue - The value to process\n * @param comparisonValue - Regular expression pattern as string\n * @param replacementValue - String to replace matches with\n * @returns String with replacements, or original string if an error occurs\n */\nexport function regexReplaceMatch(entryValue, comparisonValue, replacementValue) {\n    const originalValue = getOriginalValueAsString(entryValue);\n    const comparisonRegExp = RegExp(comparisonValue, 'g');\n    return originalValue.replaceAll(comparisonRegExp, replacementValue);\n}\n/**\n * Tests if a string value matches a regular expression pattern.\n * Used to determine if a row should be deleted.\n *\n * @param entryValue - The value to test\n * @param comparisonValue - Regular expression pattern as string\n * @returns True if the pattern matches, false otherwise or if an error occurs\n */\nexport function regexDeleteRow(entryValue, comparisonValue) {\n    const originalValue = getOriginalValueAsString(entryValue);\n    const comparisonRegExp = RegExp(comparisonValue, 'g');\n    return comparisonRegExp.test(originalValue);\n}\n","import { regexDeleteMatch, regexDeleteRow, regexReplaceMatch, valueIsEqual, valueIsGreater, valueIsGreaterOrEqual, valueIsNotEqual, valueIsSmaller, valueIsSmallerOrEqual } from \"@uploader/utils/ExtractionFunctions\";\nimport { ERROR_CATALOG } from \"@uploader/utils/errorCatalog\";\n/**\n * Determines which expected fields are missing from a data row.\n *\n * Supports both exact key matching and regex-based matching.\n *\n * @param dataRow - An object representing the row of data (key-value pairs).\n * @param expectedFields - A list of field names or patterns to expect.\n * @param regexMatching - If true, treats expected fields as regular expressions for key matching.\n * @returns An array of expected fields that are not found in the data row.\n */\nexport function getMissingFields(dataRow, expectedFields, regexMatching) {\n    let missingFields = [];\n    for (const field of expectedFields) {\n        const matchFound = regexMatching\n            ? Object.keys(dataRow).some(key => new RegExp(field).test(key))\n            : Object.prototype.hasOwnProperty.call(dataRow, field);\n        if (!matchFound) {\n            missingFields.push(field);\n        }\n    }\n    return missingFields;\n}\n/**\n * Builds a mapping between expected fields (defined in extraction rules) and actual keys in the data row.\n *\n * For each rule, the function attempts to match the rule's field against the keys in the data row,\n * using either exact string matching or a regular expression, depending on the `regex_field` flag.\n *\n * If multiple keys match a rule, the first is used and a warning is recorded.\n * If no match is found, an error is recorded.\n * All errors and warnings are pushed to the `extractionOutcome.extractionErrors` array.\n *\n * @param dataRow - The object representing a row of data with string keys.\n * @param extractionRules - Array of extraction rule objects.\n * @param blueprintId - The numerical ID of the currently processed blueprint.\n * @param blueprintOutcomeMap - A map of blueprint ids to their extraction outcome.\n * @returns A Map where each key is the rule field name and the value is the corresponding key in the dataRow.\n */\nexport function getKeyMap(dataRow, extractionRules, blueprintId, blueprintOutcomeMap) {\n    const keyMap = new Map;\n    for (const rule of extractionRules) {\n        const keys = Object.keys(dataRow).filter(key => {\n            if (rule.regex_field) {\n                try {\n                    return new RegExp(rule.field).test(key);\n                }\n                catch (error) {\n                    blueprintOutcomeMap[blueprintId].registerError(ERROR_CATALOG.INVALID_REGEX, { blueprintId: blueprintId, ruleId: rule.id, ruleRegex: rule.field });\n                    return false;\n                }\n            }\n            return rule.field === key;\n        });\n        if (keys.length > 1) {\n            const errorContext = { field: rule.field, keys: keys, defaultKey: keys[0] };\n            blueprintOutcomeMap[blueprintId].registerError(ERROR_CATALOG.MORE_THAN_ONE_KEY_MATCH, errorContext);\n            keyMap.set(rule.field, keys[0]);\n            blueprintOutcomeMap[blueprintId].mapExtractedField(rule.field, keys[0]);\n        }\n        else if (keys.length === 0) {\n            blueprintOutcomeMap[blueprintId].registerNoKeyMatch(rule.field, Object.keys(dataRow));\n        }\n        else {\n            keyMap.set(rule.field, keys[0]);\n            blueprintOutcomeMap[blueprintId].mapExtractedField(rule.field, keys[0]);\n        }\n    }\n    return keyMap;\n}\n/**\n * Applies a set of extraction rules to a data row and stores the extracted data.\n *\n * This function:\n * 1. Creates an object to hold extracted field values\n * 2. Processes each rule against the data row\n * 3. Applies comparison operators that may filter out rows\n * 4. Applies transformation operators that modify field values\n * 5. Adds the extracted data to the blueprint's outcome\n *\n * Comparison operators (==, !=, >, <, etc.) can cause the entire row to be discarded.\n * Transformation operators (regex-delete-match, etc.) modify field values in place.\n *\n * @param dataRow - A single row of data as a key-value object\n * @param extractionRules - Array of rules defining how to process fields\n * @param keyMap - Mapping from rule field names to actual data keys\n * @param blueprintId - ID of the blueprint being processed\n * @param blueprintOutcomeMap - Map of blueprint outcomes\n */\nexport function extractData(dataRow, extractionRules, keyMap, blueprintId, blueprintOutcomeMap) {\n    const extractedRowData = {};\n    for (const rule of extractionRules) {\n        const key = keyMap.get(rule.field);\n        if (key === undefined) {\n            continue;\n        }\n        switch (rule.comparison_operator) {\n            case null:\n                extractedRowData[rule.field] = dataRow[key];\n                break;\n            case '==':\n                if (valueIsEqual(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case '!=':\n                if (valueIsNotEqual(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case '<=':\n                if (valueIsSmallerOrEqual(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case '>=':\n                if (valueIsGreaterOrEqual(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case '<':\n                if (valueIsSmaller(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case '>':\n                if (valueIsGreater(dataRow[key], rule.comparison_value))\n                    return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                break;\n            case 'regex-delete-match':\n                if (key in extractedRowData) {\n                    try {\n                        let newValue = regexDeleteMatch(dataRow[key], rule.comparison_value);\n                        extractedRowData[rule.field] = newValue;\n                        dataRow[key] = newValue;\n                        blueprintOutcomeMap[blueprintId].extractionRuleLog[rule.id] += 1;\n                    }\n                    catch {\n                        // Fallback if an error occurs.\n                        extractedRowData[rule.field] = dataRow[key];\n                    }\n                }\n                break;\n            case 'regex-replace-match':\n                if (key in extractedRowData) {\n                    try {\n                        let newValue = regexReplaceMatch(dataRow[key], rule.comparison_value, rule.replacement_value);\n                        extractedRowData[rule.field] = newValue;\n                        dataRow[key] = newValue;\n                        blueprintOutcomeMap[blueprintId].extractionRuleLog[rule.id] += 1;\n                    }\n                    catch {\n                        // Fallback if an error occurs.\n                        extractedRowData[rule.field] = dataRow[key];\n                    }\n                }\n                break;\n            case 'regex-delete-row':\n                if (key in dataRow) {\n                    let deleteRow = false;\n                    try {\n                        deleteRow = regexDeleteRow(dataRow[key], rule.comparison_value);\n                    }\n                    catch {\n                        break;\n                    }\n                    if (deleteRow) {\n                        return discardRow(rule, blueprintId, blueprintOutcomeMap);\n                    }\n                }\n                break;\n            default: break;\n        }\n    }\n    if (Object.keys(extractedRowData).length > 0) {\n        blueprintOutcomeMap[blueprintId].extractedData.push(extractedRowData);\n    }\n    return;\n}\n/**\n * Marks a row as discarded due to a filtering rule and updates extraction statistics.\n *\n * @param rule - The extraction rule that triggered the discard\n * @param blueprintId - ID of the blueprint being processed\n * @param blueprintOutcomeMap - Map of blueprint outcomes\n * @returns null to signal row discard\n */\nexport function discardRow(rule, blueprintId, blueprintOutcomeMap) {\n    blueprintOutcomeMap[blueprintId].incrementExtractionRuleCount(rule);\n    return;\n}\n","import Papa from \"papaparse\";\nimport { ERROR_CATALOG } from \"@uploader/utils/errorCatalog\";\nimport { extractData, getKeyMap, getMissingFields } from \"@uploader/composables/useFileProcessor/extractionEngine\";\n/**\n * Processes a single file's content using a provided blueprint definition.\n *\n * This includes:\n * - Parsing the file content based on the format (JSON or CSV)\n * - Validating expected fields\n * - Applying extraction rules (with optional regex matching)\n * - Tracking errors, filtered rows, and stats in a structured result\n *\n * @param content - Raw file content as a string.\n * @param blueprint - The blueprint configuration defining format, fields, and extraction rules.\n * @param blueprintOutcomeMap - A map of blueprint ids to their extraction outcome.\n * @returns void — results are written directly to blueprintResultMap[blueprint.id]\n */\nexport function processContent(content, blueprint, blueprintOutcomeMap) {\n    // Exit early, if no extraction rules are defined.\n    if (blueprint.extraction_rules.length === 0) {\n        blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.NO_EXTRACTION_RULES, {});\n        return;\n    }\n    const parsedContentArray = getParsedContentArray(content, blueprint, blueprintOutcomeMap);\n    if (!parsedContentArray) {\n        blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.PARSING_ERROR, { contentType: '' });\n        return;\n    }\n    blueprintOutcomeMap[blueprint.id].extractionStats.nRowsTotal = parsedContentArray.length;\n    for (const dataRow of parsedContentArray) {\n        // Skipp row if is null/undefined\n        if (dataRow == null) {\n            continue;\n        }\n        // Validate fields.\n        const missingFields = getMissingFields(dataRow, blueprint.expected_fields, blueprint.exp_fields_regex_matching);\n        if (missingFields.length > 0) {\n            blueprintOutcomeMap[blueprint.id].extractionStats.nRowsMissingField += 1;\n            continue;\n        }\n        // Construct key map and extract data.\n        const keyMap = getKeyMap(dataRow, blueprint.extraction_rules, blueprint.id, blueprintOutcomeMap);\n        extractData(dataRow, blueprint.extraction_rules, keyMap, blueprint.id, blueprintOutcomeMap);\n    }\n}\n/**\n * Parses raw content into an array of entries based on the specified format.\n *\n * Supports JSON and CSV formats. Optionally applies a JSON extraction root\n * or a custom CSV delimiter if provided.\n *\n * @param content - Raw file content as a string\n * @param blueprint - A blueprint configuration.\n * @param blueprintOutcomeMap - A map of blueprint ids to their extraction outcome.\n * @returns An array of parsed content entries\n * @throws If the content could not be parsed or format is unsupported\n */\nexport function getParsedContentArray(content, blueprint, blueprintOutcomeMap) {\n    let parsedContentArray = null;\n    if (blueprint.format === 'json') {\n        try {\n            parsedContentArray = loadJsonContent(content, blueprint.json_extraction_root);\n        }\n        catch (error) {\n            blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.PARSING_ERROR, { contentType: 'JSON', error: error });\n        }\n    }\n    else if (blueprint.format === 'csv') {\n        try {\n            parsedContentArray = loadCsvContent(content, blueprint.csv_delimiter);\n        }\n        catch (error) {\n            blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.PARSING_ERROR, { contentType: 'CSV', error: error });\n        }\n    }\n    else {\n        blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.UNSUPPORTED_BP_FORMAT, { format: blueprint.format });\n        return null;\n    }\n    if (!parsedContentArray) {\n        blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.PARSING_ERROR, { contentType: blueprint.format });\n        return null;\n    }\n    return parsedContentArray;\n}\n/**\n * Parses JSON content and extracts a nested structure based on a given extraction root path.\n *\n * The function attempts to parse the input string as JSON. If an `extractionRoot` is provided,\n * it navigates the parsed object to retrieve a nested value (using dot/bracket notation).\n * If the final result is not iterable (i.e., not an array or similar), it is wrapped in an array.\n *\n * Errors encountered during parsing or extraction are pushed to the `generalErrors` array.\n *\n * @param {string} content - Raw JSON content as a string.\n * @param {string} extractionRoot - Dot/bracket path to the desired nested value.\n * @returns {Array|null} - An array of extracted entries, or null if parsing or extraction fails.\n */\nexport function loadJsonContent(content, extractionRoot) {\n    let fileContent;\n    try {\n        fileContent = JSON.parse(content);\n    }\n    catch (error) {\n        throw new Error(`Failed to parse JSON content: ${error}`);\n    }\n    if (extractionRoot && extractionRoot !== '') {\n        try {\n            fileContent = getNestedJsonContent(fileContent, extractionRoot);\n        }\n        catch (error) {\n            throw new Error(`Failed to get nested JSON content: ${error}`);\n        }\n    }\n    // Check if fileContent must be converted to array.\n    if (!(Symbol.iterator in Object(fileContent))) {\n        fileContent = new Array(fileContent);\n    }\n    return fileContent;\n}\n/**\n * Parses CSV content into an array of objects using PapaParse.\n *\n * @param content - Raw CSV string content.\n * @param csvDelimiter - The delimiter used in the CSV (e.g., ',' or ';').\n * @returns An array of parsed rows as objects, or null if parsing fails.\n */\nexport function loadCsvContent(content, csvDelimiter) {\n    try {\n        const parserResult = Papa.parse(content, {\n            header: true,\n            delimiter: csvDelimiter,\n            skipEmptyLines: true,\n            dynamicTyping: false\n        });\n        if (parserResult.errors.length > 0) {\n            throw new Error(`CSV parsing errors: ${parserResult.errors}`);\n        }\n        return parserResult.data;\n    }\n    catch (error) {\n        throw new Error(`An error occurred during csv parsing: ${error}`);\n    }\n}\n/**\n * Retrieves a nested value from a JSON-like object using a string path.\n *\n * Supports dot notation (e.g., \"user.address.city\") and bracket notation\n * (e.g., \"user['address']['city']\" or \"user[0].name\") to access deeply nested properties.\n *\n * @param {object} fileContent - The JSON object to extract data from.\n * @param {string} extractionRoot - The path string indicating the nested property to retrieve.\n * @returns {*} - The value at the specified path, or undefined if the path is invalid.\n */\nexport function getNestedJsonContent(fileContent, extractionRoot) {\n    if (typeof fileContent !== 'object' || fileContent == null)\n        return;\n    const pathParts = extractionRoot\n        .replace(/\\[(\\w+)]/g, '.$1') // convert brackets to dot notation\n        .replace(/^\\./, '') // remove leading dot\n        .split('.');\n    let current = fileContent;\n    for (const key of pathParts) {\n        if (current != null && key in current) {\n            current = current[key];\n        }\n        else {\n            return undefined;\n        }\n    }\n    return current;\n}\n","import JSZip from 'jszip';\nimport { ERROR_CATALOG } from \"@uploader/utils/errorCatalog\";\nimport { registerGeneralError } from \"@uploader/composables/useFileProcessor/errorHandling\";\nimport { processContent } from \"@uploader/composables/useFileProcessor/contentParsers\";\n/**\n * Processes a ZIP archive by extracting and processing matching files.\n *\n * This function:\n * 1. Validates that the file is a valid ZIP archive\n * 2. Extracts the archive contents\n * 3. For each blueprint:\n *    - Compiles the regex pattern for file matching\n *    - Finds matching files within the archive\n *    - Extracts and processes each matching file\n * 4. Records all errors and processing results\n *\n * If a blueprint has no matching files or encounters errors, appropriate\n * error messages are recorded in the blueprint's outcome.\n *\n * @param file - The ZIP file to process\n * @param blueprints - Blueprint configurations defining extraction rules\n * @param blueprintOutcomeMap - Map to store extraction results by blueprint ID\n * @param generalErrors - Collection for recording general processing errors\n * @returns A Promise that resolves when processing is complete\n */\nexport async function handleZipFile(file, blueprints, blueprintOutcomeMap, generalErrors) {\n    // Validate file.\n    if (!fileIsZip(file)) {\n        const fileType = file.name.slice(file.name.lastIndexOf('.') + 1);\n        registerGeneralError(generalErrors, ERROR_CATALOG.INVALID_ZIP, { fileType: fileType });\n        return;\n    }\n    let zip;\n    try {\n        zip = await JSZip.loadAsync(file);\n    }\n    catch (error) {\n        registerGeneralError(generalErrors, ERROR_CATALOG.ZIP_READ_FAIL, { error: error });\n        return;\n    }\n    for (const blueprint of blueprints) {\n        let re;\n        try {\n            re = new RegExp(blueprint.regex_path);\n        }\n        catch (error) {\n            blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.INVALID_REGEX, { error: error });\n            continue;\n        }\n        const matchingFiles = zip.file(re);\n        if (matchingFiles.length === 0) {\n            const availableFiles = Object.keys(zip.files);\n            const errorContext = { regexPath: blueprint.regex_path, availableFiles: availableFiles };\n            blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.NO_FILE_MATCH, errorContext);\n            continue;\n        }\n        for (const zipEntry of matchingFiles) {\n            try {\n                const content = await zipEntry.async(\"string\");\n                processContent(content, blueprint, blueprintOutcomeMap);\n            }\n            catch (error) {\n                blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.FILE_PROCESSING_FAIL_GENERAL, { error: error });\n            }\n        }\n    }\n}\n/**\n * Handles the processing of a single file.\n *\n * Reads the file as plain text using FileReader, then applies all available blueprints\n * by passing the content through `processContent()`. Results are stored in `blueprintResultMap`.\n *\n * @param file - The selected file to process (expected to be text-based like JSON or CSV).\n * @param blueprints - An array of blueprint configurations defining format, fields, and extraction rules.\n * @param blueprintOutcomeMap - A map of blueprint ids to their extraction outcome.\n * @param generalErrors - The array where general errors are registered.\n */\nexport function handleSingleFile(file, blueprints, blueprintOutcomeMap, generalErrors) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (event) {\n            const content = event.target.result;\n            if (typeof content !== 'string') {\n                registerGeneralError(generalErrors, ERROR_CATALOG.STRING_CONVERSION_ERROR, {});\n                return reject('invalid content');\n            }\n            blueprints.forEach(blueprint => {\n                try {\n                    processContent(content, blueprint, blueprintOutcomeMap);\n                }\n                catch (error) {\n                    blueprintOutcomeMap[blueprint.id].registerError(ERROR_CATALOG.FILE_PROCESSING_FAIL_GENERAL, { error: error });\n                }\n            });\n            resolve();\n        };\n        reader.onerror = function (event) {\n            const error = event.target?.error || new Error('Unknown file reading error');\n            registerGeneralError(generalErrors, ERROR_CATALOG.FILE_PROCESSING_FAIL_GENERAL, { error: error });\n            reject(error);\n        };\n        reader.readAsText(file);\n    });\n}\n/**\n * Determines whether a file is a valid ZIP archive.\n *\n * Performs validation based on:\n * 1. File extension (.zip)\n * 2. MIME type (application/zip and related types)\n *\n * This function helps prevent processing non-ZIP files that could\n * cause errors during extraction.\n *\n * @param file - The file to validate\n * @returns True if the file appears to be a valid ZIP archive, false otherwise\n */\nexport function fileIsZip(file) {\n    const extensionIsValid = file.name.toLowerCase().endsWith('.zip');\n    const mimeIsValid = [\n        'application/zip',\n        'application/x-zip-compressed',\n        'multipart/x-zip'\n    ].includes(file.type);\n    return extensionIsValid && mimeIsValid;\n}\n","import { reactive } from 'vue';\nimport { BlueprintExtractionOutcome } from \"@uploader/classes/BlueprintExtractionOutcome\";\nimport { handleSingleFile, handleZipFile } from \"@uploader/composables/useFileProcessor/fileHandlers\";\n/**\n * useFileProcessor\n *\n * A Vue composable that handles file processing and data extraction based on blueprint configurations.\n * It serves as the main entry point for the file processing system, managing state and coordinating\n * specialized processing modules.\n *\n * Features:\n * - Processes both single files (JSON/CSV) and ZIP archives\n * - Tracks extraction results and errors in reactive state objects\n * - Coordinates the complete processing pipeline:\n *   1. File validation and reading\n *   2. Content parsing and structure extraction\n *   3. Rule application and data transformation\n *   4. Result aggregation and error tracking\n *\n * @param expectsZip - Whether to process input as a ZIP archive (true) or single file (false)\n * @param blueprints - Array of blueprint configurations defining extraction rules and formats\n *\n * @returns An object containing:\n *   - handleSelectedFile: Function to process a user-selected file\n *   - blueprintOutcomeMap: Reactive map of blueprint outcomes indexed by blueprint ID\n *   - generalErrors: Reactive array of general processing errors\n *   - processorStatus: Reactive object tracking the current processing state\n *   - progress: Reactive object tracking processing progress (0-100)\n *\n * Usage:\n * ```typescript\n * const { handleSelectedFile, blueprintOutcomeMap, generalErrors } = useFileProcessor(true, blueprints);\n *\n * // Process a file\n * await handleSelectedFile(fileObject);\n *\n * // Access extraction results\n * console.log(blueprintOutcomeMap[blueprintId].extractedData);\n * ```\n */\nexport function useFileProcessor(expectsZip, blueprints) {\n    const generalErrors = reactive([]); // Used to track general errors.\n    const blueprintOutcomeMap = reactive({});\n    function resetState() {\n        generalErrors.length = 0;\n        Object.keys(blueprintOutcomeMap).forEach(key => {\n            delete blueprintOutcomeMap[key];\n        });\n        for (const blueprint of blueprints) {\n            blueprintOutcomeMap[blueprint.id] = new BlueprintExtractionOutcome(blueprint);\n        }\n    }\n    function initialize() {\n        resetState();\n    }\n    /**\n     * Processes a user-selected file based on the configured expectations.\n     *\n     * This function:\n     * 1. Resets the current state and errors\n     * 2. Updates the processor status to 'processing'\n     * 3. Applies a small delay for UI responsiveness (optional)\n     * 4. Dispatches the file to the appropriate handler based on type\n     * 5. Updates the processor status to 'done' when complete\n     *\n     * All processing results and errors are stored in the reactive state\n     * objects (blueprintOutcomeMap and generalErrors).\n     *\n     * @param file - The File object to process (from file input or drop event)\n     * @returns A Promise that resolves when processing is complete\n     */\n    async function handleSelectedFile(file) {\n        resetState();\n        try {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            if (expectsZip) {\n                await handleZipFile(file, blueprints, blueprintOutcomeMap, generalErrors);\n            }\n            else {\n                await handleSingleFile(file, blueprints, blueprintOutcomeMap, generalErrors);\n            }\n        }\n        catch (error) {\n            console.error(\"Unexpected error during file processing:\", error);\n        }\n        return;\n    }\n    initialize();\n    return {\n        generalErrors,\n        blueprintOutcomeMap,\n        handleSelectedFile\n    };\n}\n","import { useI18n } from \"vue-i18n\";\nimport { ref } from \"vue\";\n/**\n * useLogPoster\n *\n * A composable that handles structured logging of blueprint processing events to the backend.\n * It provides a centralized mechanism for recording errors, statistics, and extraction results\n * with consistent timestamps and formatting.\n *\n * Features:\n * - Posts various types of logs with consistent timestamps for correlation\n * - Handles both general and blueprint-specific errors\n * - Records extraction statistics, rule usage, and field mappings\n * - Provides error handling for network failures\n *\n * @param uploaderId - Unique identifier for the uploader component\n * @param exceptionUrl - Backend endpoint URL for log submission\n *\n * @returns An object containing:\n *   - postLogs: Function to submit all logs for a processing session\n *\n * Usage:\n * ```typescript\n * const { postLogs } = useLogPoster(1, '/api/logs');\n *\n * // After processing is complete, post all logs\n * await postLogs(generalErrors, blueprintOutcomeMap);\n * ```\n */\nexport function useLogPoster(uploaderId, exceptionUrl) {\n    const { t } = useI18n({ locale: 'en' });\n    let logDate = ref(Date.now());\n    /**\n     * Posts all processing logs and statistics to the backend.\n     *\n     * This function:\n     * 1. Captures a unified timestamp for all logs in this batch\n     * 2. Posts general processing errors (not blueprint-specific)\n     * 3. Posts blueprint-specific errors with translations\n     * 4. Posts extraction statistics, rule usage logs, and field mappings\n     *\n     * All logs are posted individually but share the same timestamp for correlation.\n     * Network failures are logged to the console but do not cause the function to fail.\n     *\n     * @param generalErrors - Array of general processing errors\n     * @param blueprintOutcomeMap - Map of blueprint IDs to their extraction outcomes\n     * @returns A Promise that resolves when all logs have been posted\n     */\n    async function postLogs(generalErrors, blueprintOutcomeMap) {\n        // Take a timestamp that is the same for all.\n        logDate.value = Date.now();\n        // Log general errors.\n        for (const error of generalErrors) {\n            await postLog(null, error.type, t(error.i18nDetail, error.context));\n        }\n        // Log blueprint errors.\n        for (const blueprintOutcome of Object.values(blueprintOutcomeMap)) {\n            for (const error of blueprintOutcome.processingErrors) {\n                if (error.type === 'NO_FILE_MATCH') {\n                    await postLog(blueprintOutcome.blueprintId, error.type, t(`${error.i18nDetail}-detail`, error.context));\n                }\n                else {\n                    await postLog(blueprintOutcome.blueprintId, error.type, t(error.i18nDetail, error.context));\n                }\n            }\n            const logsToPost = {\n                'EXTRACTION_STATS': blueprintOutcome.extractionStats,\n                'EXTRACTION_LOG': blueprintOutcome.extractionRuleLog,\n                'EXTRACTED_FIELDS_MAP': blueprintOutcome.extractedFieldsMap\n            };\n            for (const [type, data] of Object.entries(logsToPost)) {\n                await postLog(blueprintOutcome.blueprintId, type, JSON.stringify(data));\n            }\n        }\n    }\n    async function postLog(blueprintId, logType, message) {\n        const postData = {\n            'status_code': logType,\n            'message': message,\n            'raised_by': 'client',\n            'uploader': uploaderId,\n            'blueprint': blueprintId,\n            'date': new Date(logDate.value).toISOString()\n        };\n        try {\n            const response = await fetch(exceptionUrl, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(postData),\n            });\n            if (!response.ok) {\n                console.error(`Error posting log: ${response.status} ${response.statusText}`);\n                return false;\n            }\n            return true;\n        }\n        catch (error) {\n            console.error(\"Could not post error message:\", error);\n            return false;\n        }\n    }\n    return {\n        postLogs\n    };\n}\n","import { defineComponent as _defineComponent } from 'vue';\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = { class: \"uploader-name\" };\nconst _hoisted_2 = { class: \"uploader-container\" };\nconst _hoisted_3 = { class: \"uploader-section\" };\nconst _hoisted_4 = { class: \"uploader-section\" };\nconst _hoisted_5 = { class: \"uploader-section\" };\nconst _hoisted_6 = {\n    key: 0,\n    class: \"uploader-section\"\n};\nimport { useI18n } from 'vue-i18n';\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport ConsentQuestion from \"@uploader/components/ConsentQuestion.vue\";\nimport ExtractionOverview from \"@uploader/components/ExtractionOverview.vue\";\nimport FileDrop from \"@uploader/components/FileDrop.vue\";\nimport Instructions from \"@uploader/components/Instructions.vue\";\nimport { useConsentManager } from \"@uploader/composables/useConsentManager\";\nimport { useExtractionStateTracker } from \"@uploader/composables/useExtractionStateTracker\";\nimport { useFileProcessor } from \"@uploader/composables/useFileProcessor\";\nimport { useLogPoster } from \"@uploader/composables/useLogPoster\";\nimport { UPLOADER_STATES } from \"@uploader/types/UploaderState\";\nimport { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'UploaderWrapper',\n    props: {\n        blueprintConfigs: {},\n        combinedConsent: { type: Boolean },\n        componentId: {},\n        exceptionUrl: {},\n        expectsZip: { type: Boolean },\n        instructionConfig: {},\n        name: {}\n    },\n    emits: [\"statusChanged\"],\n    setup(__props, { emit: __emit }) {\n        const { t, locale } = useI18n();\n        const props = __props;\n        const emit = __emit;\n        let uploaderState = ref(UPLOADER_STATES.IDLE);\n        const { generalErrors, blueprintOutcomeMap, handleSelectedFile } = useFileProcessor(props.expectsZip, props.blueprintConfigs);\n        const { postLogs } = useLogPoster(props.componentId, props.exceptionUrl);\n        /**\n         * Processes an uploaded file, extracts data according to blueprint configurations,\n         * and updates component state.\n         *\n         * @param file - The user-uploaded file to process\n         */\n        async function processFile(file) {\n            uploaderState.value = UPLOADER_STATES.PROCESSING;\n            await handleSelectedFile(file);\n            getExtractionState();\n            emitStatus();\n            postLogs(generalErrors, blueprintOutcomeMap).catch(error => {\n                console.error(\"Logs could not be posted to backend:\", error);\n            });\n            uploaderState.value = UPLOADER_STATES.DONE;\n        }\n        const { extractionState, generalErrorsToDisplay, blueprintExtractionStates, getExtractionState } = useExtractionStateTracker(generalErrors, blueprintOutcomeMap);\n        const { blueprintConsentMap, updateConsent } = useConsentManager(props.blueprintConfigs, props.combinedConsent);\n        watch(blueprintConsentMap, () => {\n            emitStatus();\n        }, { deep: true });\n        /**\n         * Emits the current uploader state to the parent component.\n         *\n         * This includes consent status, extraction state, and all extracted data.\n         */\n        function emitStatus() {\n            emit('statusChanged', props.componentId, blueprintConsentMap.value, extractionState.value, blueprintExtractionStates.value, blueprintOutcomeMap);\n        }\n        onMounted(() => {\n            emitStatus();\n        });\n        const isExtractionSuccessful = computed(() => extractionState.value === EXTRACTION_STATES.SUCCESS ||\n            extractionState.value === EXTRACTION_STATES.PARTIAL);\n        const showCombinedConsent = computed(() => props.combinedConsent === true && isExtractionSuccessful.value);\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_ctx.name), 1),\n                _createElementVNode(\"div\", _hoisted_2, [\n                    _createElementVNode(\"div\", _hoisted_3, [\n                        _createVNode(Instructions, {\n                            instructions: _ctx.instructionConfig,\n                            \"component-id\": _ctx.componentId\n                        }, null, 8, [\"instructions\", \"component-id\"])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_4, [\n                        _createVNode(FileDrop, {\n                            \"expects-zip\": props.expectsZip,\n                            \"uploader-state\": _unref(uploaderState),\n                            \"extraction-state\": _unref(extractionState),\n                            \"general-errors\": _unref(generalErrorsToDisplay),\n                            onFileDropped: processFile\n                        }, null, 8, [\"expects-zip\", \"uploader-state\", \"extraction-state\", \"general-errors\"])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_5, [\n                        _createVNode(ExtractionOverview, {\n                            \"uploader-state\": _unref(uploaderState),\n                            \"extraction-state\": _unref(extractionState),\n                            blueprints: props.blueprintConfigs,\n                            \"blueprint-extraction-states\": _unref(blueprintExtractionStates),\n                            \"blueprint-outcome-map\": _unref(blueprintOutcomeMap),\n                            \"combined-consent\": _ctx.combinedConsent,\n                            onConsentUpdated: _unref(updateConsent)\n                        }, null, 8, [\"uploader-state\", \"extraction-state\", \"blueprints\", \"blueprint-extraction-states\", \"blueprint-outcome-map\", \"combined-consent\", \"onConsentUpdated\"])\n                    ]),\n                    (showCombinedConsent.value)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                            _createVNode(ConsentQuestion, {\n                                \"combined-consent\": _ctx.combinedConsent,\n                                \"blueprint-id\": null,\n                                onConsentUpdated: _unref(updateConsent)\n                            }, null, 8, [\"combined-consent\", \"onConsentUpdated\"])\n                        ]))\n                        : _createCommentVNode(\"\", true)\n                ])\n            ], 64));\n        };\n    }\n});\n","import script from \"./UploaderWrapper.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./UploaderWrapper.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./UploaderWrapper.vue?vue&type=style&index=0&id=2ca6fab1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ca6fab1\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue';\nimport { createElementVNode as _createElementVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n    class: \"issue-modal\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": \"modal-title\",\n    tabindex: \"-1\"\n};\nconst _hoisted_2 = { class: \"modal-body d-flex flex-row align-items-center pt-5\" };\nconst _hoisted_3 = {\n    id: \"modal-title\",\n    class: \"visually-hidden\"\n};\nconst _hoisted_4 = { key: 0 };\nconst _hoisted_5 = { key: 1 };\nconst _hoisted_6 = { key: 2 };\nconst _hoisted_7 = { class: \"modal-footer\" };\nimport { useI18n } from 'vue-i18n';\nimport { computed, onMounted, onUnmounted, ref, watch } from \"vue\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'IssueModal',\n    props: {\n        unattendedUploaderShare: {},\n        unattendedUploaderNames: {},\n        blueprintsWithoutConsentCount: {},\n        blueprintsWithoutConsentNames: {},\n        allUploadersValid: { type: [Boolean, null] },\n        showModal: { type: Boolean }\n    },\n    emits: [\"continueAnyway\", \"modalClosed\"],\n    setup(__props, { emit: __emit }) {\n        /**\n         * Component: IssueModal\n         *\n         * A modal dialog that displays validation issues before form submission.\n         * It alerts users about incomplete actions and provides options to proceed\n         * or go back depending on the severity of issues.\n         *\n         * Features:\n         * - Shows different messages based on validation state:\n         *   - Unattended uploaders: Displays names of uploaders the user hasn't interacted with\n         *   - Missing consent: Displays names of blueprints that lack explicit consent\n         * - Conditional action buttons based on validation status\n         * - Responsive design for different screen sizes\n         * - Internationalized content through vue-i18n\n         *\n         * Props:\n         * - unattendedUploaderShare: Percentage (0-1) of uploaders the user hasn't attempted\n         * - unattendedUploaderNames: Names of the uploaders that haven't been attempted\n         * - blueprintsWithoutConsentCount: Number of blueprints without explicit consent\n         * - blueprintsWithoutConsentNames: Names of the blueprints without consent\n         * - allUploadersValid: Whether all uploaders pass validation requirements\n         * - showModal: Toggle to control modal visibility\n         *\n         * Emits:\n         * - continueAnyway: Emitted when user chooses to continue despite warnings\n         * - modalClosed: Emitted when modal is closed via the back button\n         *\n         * Behavior:\n         * - If any blueprints lack consent, the \"Continue Anyway\" option is hidden\n         * - User must go back and provide consent for all blueprints to proceed\n         * - If only unattended uploaders exist, user can choose to continue anyway\n         */\n        const { t, locale } = useI18n();\n        const props = __props;\n        const emit = __emit;\n        const modalVisible = ref(false);\n        const canContinueAnyway = computed(() => props.blueprintsWithoutConsentCount === 0);\n        watch(() => props.showModal, () => {\n            modalVisible.value = props.showModal;\n        }, { immediate: true });\n        /**\n         * Hides the modal and emits the modalClosed event.\n         * This allows the parent component to update its state accordingly.\n         */\n        const hideModal = () => {\n            modalVisible.value = false;\n            emit('modalClosed');\n        };\n        /**\n         * Formats an array of strings into a human-readable list.\n         *\n         * Example: ['A', 'B', 'C'] becomes ' (\"A\", \"B\", \"C\")'\n         *\n         * @param strings - Array of strings to combine\n         * @returns A formatted string with all items enclosed in quotes and properly separated\n         */\n        const combineStrings = (strings) => {\n            const nStrings = strings.length;\n            if (nStrings === 0) {\n                return '';\n            }\n            let combinedString = ' (';\n            for (let i = 0; i < nStrings; i++) {\n                combinedString += ('\"' + strings[i] + '\"');\n                if (i < nStrings - 2) {\n                    combinedString += ', ';\n                }\n                else if (i === nStrings - 2) {\n                    combinedString += ', ';\n                }\n            }\n            combinedString += ')';\n            return combinedString;\n        };\n        function handleKeyDown(event) {\n            if (event.key === 'Escape') {\n                hideModal();\n            }\n        }\n        onMounted(() => {\n            window.addEventListener('keydown', handleKeyDown);\n        });\n        onUnmounted(() => {\n            window.removeEventListener('keydown', handleKeyDown);\n        });\n        return (_ctx, _cache) => {\n            return (modalVisible.value)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _createElementVNode(\"div\", {\n                        class: \"modal-backdrop\",\n                        onClick: hideModal\n                    }),\n                    _createElementVNode(\"div\", _hoisted_1, [\n                        _createElementVNode(\"div\", _hoisted_2, [\n                            _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(_unref(t)(\"issue-modal.title\")), 1),\n                            _cache[1] || (_cache[1] = _createElementVNode(\"div\", { class: \"ps-2 pe-3 color-blue\" }, [\n                                _createElementVNode(\"i\", { class: \"bi bi-info-circle-fill fs-1\" })\n                            ], -1)),\n                            _createElementVNode(\"div\", null, [\n                                (_ctx.unattendedUploaderShare === 1)\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_unref(t)(\"issue-modal.none-attempted\")), 1))\n                                    : (_ctx.unattendedUploaderShare > 0)\n                                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_unref(t)(\"issue-modal.not-all-attempted\", { \"skipped-uploads\": combineStrings(props.unattendedUploaderNames) })), 1))\n                                        : _createCommentVNode(\"\", true),\n                                (_ctx.blueprintsWithoutConsentCount > 0 && _ctx.unattendedUploaderShare < 1)\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_unref(t)(\"issue-modal.not-all-consented\", { \"blueprints-wo-consent\": combineStrings(props.blueprintsWithoutConsentNames) })), 1))\n                                    : _createCommentVNode(\"\", true)\n                            ])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_7, [\n                            _createElementVNode(\"button\", {\n                                type: \"button\",\n                                class: \"btn btn-primary\",\n                                onClick: hideModal\n                            }, _toDisplayString(_unref(t)(\"issue-modal.back\")), 1),\n                            (canContinueAnyway.value)\n                                ? (_openBlock(), _createElementBlock(\"button\", {\n                                    key: 0,\n                                    type: \"button\",\n                                    class: \"btn btn-light\",\n                                    onClick: _cache[0] || (_cache[0] = ($event) => { hideModal(); emit('continueAnyway'); })\n                                }, _toDisplayString(_unref(t)(\"issue-modal.continue-anyway\")), 1))\n                                : _createCommentVNode(\"\", true)\n                        ])\n                    ])\n                ], 64))\n                : _createCommentVNode(\"\", true);\n        };\n    }\n});\n","import script from \"./IssueModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./IssueModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./IssueModal.vue?vue&type=style&index=0&id=1c0f1c69&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1c0f1c69\"]])\n\nexport default __exports__","import { EXTRACTION_STATES } from \"@uploader/utils/stateCatalog\";\nimport { computed, ref } from \"vue\";\n/**\n * useUploaderValidator\n *\n * A composable that validates uploader states and consent provisions.\n * It checks if all uploads have been attempted and if consent has been\n * obtained for all successfully extracted blueprints.\n *\n * @param uploaderOutcomes - Reactive reference to the uploader outcomes object\n *\n * @returns An object containing:\n *   - validateUploaders: Function to perform validation\n *   - unattendedUploaderShare: Percentage of uploaders not attempted\n *   - unattendedUploaderNames: Names of uploaders not attempted\n *   - blueprintsWithoutConsentCount: Number of blueprints missing consent\n *   - blueprintsWithoutConsentNames: Names of blueprints missing consent\n *   - allUploadersValid: Overall validation result\n */\nexport function useUploaderValidator(uploaderOutcomes) {\n    const unattendedUploaderNames = ref([]);\n    const blueprintsWithoutConsentNames = ref([]);\n    const blueprintsWithoutConsentCount = ref(0);\n    const allUploadersValid = ref(null);\n    const unattendedUploaderShare = computed(() => {\n        const totalUploaders = Object.keys(uploaderOutcomes.value).length;\n        if (totalUploaders === 0)\n            return 0;\n        const notAttemptedCount = unattendedUploaderNames.value.length;\n        return notAttemptedCount / totalUploaders;\n    });\n    /**\n     * Validates all uploaders to check for attempted uploads and consent.\n     *\n     * This function:\n     * 1. Resets all validation indicators\n     * 2. Checks if all uploads have been attempted\n     * 3. Checks if consent has been provided for all successful extractions\n     * 4. Updates the overall validation status\n     *\n     * @returns True if all uploaders are valid, false otherwise\n     */\n    function validateUploaders() {\n        if (allDonationsAttempted() && consentObtainedForAll()) {\n            allUploadersValid.value = true;\n            return true;\n        }\n        else {\n            allUploadersValid.value = false;\n            return false;\n        }\n    }\n    /**\n     * Checks if all uploads have been attempted.\n     *\n     * An upload is considered \"not attempted\" if its state is still PENDING.\n     * This function collects the names of unattended uploaders for display\n     * in the UI.\n     *\n     * @returns True if all uploads have been attempted, false otherwise\n     */\n    const allDonationsAttempted = () => {\n        unattendedUploaderNames.value = [];\n        for (const uploader of Object.values(uploaderOutcomes.value)) {\n            if (uploader.uploaderState === EXTRACTION_STATES.PENDING) {\n                unattendedUploaderNames.value.push(uploader.uploaderName);\n            }\n        }\n        return (unattendedUploaderNames.value.length === 0);\n    };\n    /**\n     * Checks if consent has been provided for all successful extractions.\n     *\n     * For each successful blueprint extraction, this function verifies\n     * that the user has explicitly provided consent (true or false).\n     * Null consent values are considered invalid.\n     *\n     * @returns True if all successful extractions have consent, false otherwise\n     */\n    const consentObtainedForAll = () => {\n        blueprintsWithoutConsentNames.value = [];\n        blueprintsWithoutConsentCount.value = 0;\n        for (const uploader of Object.values(uploaderOutcomes.value)) {\n            if (!uploader.consentMap) {\n                console.log(`Uploader ${uploader.uploaderName} is missing consentMap.`);\n                continue;\n            }\n            for (const blueprint of Object.keys(uploader.consentMap)) {\n                if (uploader.consentMap[blueprint] === null &&\n                    uploader.blueprintStates[blueprint].state === EXTRACTION_STATES.SUCCESS) {\n                    blueprintsWithoutConsentNames.value.push(uploader.blueprintNames[blueprint]);\n                }\n            }\n        }\n        return (blueprintsWithoutConsentNames.value.length === 0);\n    };\n    return {\n        validateUploaders,\n        unattendedUploaderShare,\n        unattendedUploaderNames,\n        blueprintsWithoutConsentCount,\n        blueprintsWithoutConsentNames,\n        allUploadersValid\n    };\n}\n","import JSZip from \"jszip\";\nimport { ref } from \"vue\";\n/**\n * Composable: useDataSubmitter\n *\n * Handles the preparation and submission of extracted blueprint data to the server.\n * Gathers data from all uploaders, compresses it into a ZIP file, and submits it\n * via a form POST request.\n *\n * Features:\n * - Collects data and consent information from all uploader outcomes\n * - Compresses data into a ZIP archive for efficient transfer\n * - Handles form submission and redirects\n *\n * @param uploaderOutcomes - Reactive reference to uploader outcomes containing extraction data\n * @param postUrl - Server endpoint URL for data submission\n *\n * @returns {Object} An object containing:\n *   - submitting: Reactive boolean indicating whether submission is in progress\n *   - submitDonation: Function to trigger the data submission process\n *\n * Usage:\n * ```\n * const { submitting, submitDonation } = useDataSubmitter(uploaderOutcomes, '/api/submit');\n *\n * // Show loading UI when submitting\n * watch(submitting, (value) => {\n *   showLoadingOverlay(value);\n * });\n *\n * // Trigger submission\n * submitDonation();\n * ```\n */\nexport function useDataSubmitter(uploaderOutcomes, postUrl) {\n    const submitting = ref(false);\n    /**\n     * Gathers and formats data from all uploader outcomes for submission.\n     *\n     * Extracts data from each blueprint in each uploader, organizing it by\n     * blueprint ID with associated consent and status information.\n     * If consent for blueprint is false, extractedData is replaced with an empty array ([]).\n     *\n     * @returns A structured object mapping blueprint IDs to their data, consent, and status\n     */\n    function gatherPostData() {\n        const postData = {};\n        for (const uploader of Object.values(uploaderOutcomes.value)) {\n            if (!uploader.extractionOutcome)\n                continue;\n            for (const blueprint of Object.values(uploader.extractionOutcome)) {\n                let extractedData = [];\n                if (uploader.consentMap[blueprint.blueprintId] === true) {\n                    extractedData = blueprint.extractedData;\n                }\n                postData[blueprint.blueprintId] = {\n                    consent: uploader.consentMap[blueprint.blueprintId],\n                    extractedData: extractedData,\n                    status: uploader.blueprintStates[blueprint.blueprintId].state\n                };\n            }\n        }\n        return postData;\n    }\n    /**\n     * Creates a compressed ZIP file containing the provided data.\n     *\n     * @param data - The data to compress (will be JSON stringified)\n     * @param filename - Name of the file within the ZIP archive\n     * @returns A Blob containing the compressed ZIP file\n     */\n    async function createZip(data, filename) {\n        const zip = new JSZip();\n        zip.file(filename, JSON.stringify(data));\n        return await zip.generateAsync({\n            type: \"blob\",\n            compression: \"DEFLATE\",\n            compressionOptions: { level: 5 }\n        });\n    }\n    /**\n     * Submits the gathered data to the server.\n     *\n     * This function:\n     * 1. Sets the submitting state to true\n     * 2. Gathers and formats the data from uploader outcomes\n     * 3. Compresses the data into a ZIP file\n     * 4. Appends the data to a form\n     * 5. Submits the form to the server\n     * 6. Handles redirects from the server response\n     *\n     * @returns A promise that resolves to true if submission was successful, false otherwise\n     */\n    async function submitDonation() {\n        // Show submission overlay.\n        submitting.value = true;\n        // Get data.\n        const postData = gatherPostData();\n        if (Object.keys(postData).length === 0) {\n            console.warn(\"No data to submit\");\n            return false;\n        }\n        const dataBlob = await createZip(postData, \"data_donation.json\");\n        // Add data to form.\n        const formElement = document.getElementById(\"uploader-form\");\n        if (!formElement) {\n            console.error(\"Form element not found\");\n            return false;\n        }\n        const formData = new FormData(formElement);\n        formData.append(\"post_data\", dataBlob);\n        // Send data to server\n        try {\n            const response = await fetch(postUrl, {\n                method: \"POST\",\n                body: formData,\n            });\n            if (response.redirected) {\n                window.location.href = response.url;\n            }\n            return true;\n        }\n        catch (error) {\n            console.error(\"Error during data submission to server:\", error);\n        }\n        finally {\n            submitting.value = false;\n        }\n    }\n    return {\n        submitting,\n        submitDonation\n    };\n}\n","import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n    class: \"custom-modal\",\n    id: \"processingModal\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": \"loading-message\",\n    \"aria-live\": \"assertive\"\n};\nconst _hoisted_2 = { class: \"modal-dialog modal-dialog-centered custom-modal-container m-0\" };\nconst _hoisted_3 = { class: \"modal-content fs-1 text-center custom-modal-content\" };\nconst _hoisted_4 = {\n    id: \"loading-message\",\n    class: \"p-3 modal-message\"\n};\nimport { useI18n } from 'vue-i18n';\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'SubmittingOverlay',\n    setup(__props) {\n        /**\n         * Component: SubmittingOverlay\n         *\n         * A modal overlay that displays while form data is being submitted to the server.\n         * This component provides visual feedback to users during asynchronous operations.\n         *\n         * Features:\n         * - Fullscreen overlay with semi-transparent backdrop\n         * - Animated entrance effect\n         * - Animated loading indicator with floating dots\n         * - Responsive design for different screen sizes\n         * - Internationalized message through vue-i18n\n         *\n         * Usage:\n         * This component should be conditionally rendered when a submission process\n         * is active. It doesn't accept props or emit events - it's a pure presentational\n         * component that should be shown/hidden by its parent.\n         *\n         * Dependencies:\n         * - vue-i18n for translation of the waiting message\n         */\n        const { t, locale } = useI18n();\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, [\n                    _createElementVNode(\"div\", _hoisted_2, [\n                        _createElementVNode(\"div\", _hoisted_3, [\n                            _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_unref(t)('submitting-modal.submit-wait')), 1),\n                            _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n                                class: \"dot-floating\",\n                                \"aria-hidden\": \"true\"\n                            }, null, -1))\n                        ])\n                    ])\n                ]),\n                _cache[1] || (_cache[1] = _createElementVNode(\"div\", { class: \"modal-backdrop\" }, null, -1))\n            ], 64));\n        };\n    }\n});\n","import script from \"./SubmittingOverlay.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SubmittingOverlay.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SubmittingOverlay.vue?vue&type=style&index=0&id=2fab3ad3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2fab3ad3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue';\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = { class: \"ddm-uploader\" };\nconst _hoisted_2 = { class: \"row\" };\nconst _hoisted_3 = { class: \"col\" };\nconst _hoisted_4 = {\n    id: \"uploader-form\",\n    method: \"POST\",\n    enctype: \"multipart/form-data\"\n};\nconst _hoisted_5 = [\"value\"];\nimport { useI18n } from 'vue-i18n';\nimport { ref } from 'vue';\nimport UploaderWrapper from \"@uploader/components/UploaderWrapper.vue\";\nimport IssueModal from \"@uploader/components/IssueModal.vue\";\nimport { useUploaderValidator } from \"@uploader/composables/useUploaderValidator\";\nimport { useDataSubmitter } from \"@uploader/composables/useDataSubmitter\";\nimport SubmittingOverlay from \"@uploader/components/SubmittingOverlay.vue\";\nexport default /*@__PURE__*/ _defineComponent({\n    __name: 'UploaderApp',\n    props: {\n        uploaderConfigs: {},\n        actionUrl: {},\n        exceptionUrl: {},\n        language: {},\n        csrfToken: {}\n    },\n    setup(__props) {\n        /**\n         * Main entry component for handling 1-n uploaders.\n         *\n         * Features:\n         * - Dynamically renders uploader components from config.\n         * - Validates uploader state before submission regarding two aspects:\n         *      a. Has the user attempted an upload for all uploaders?\n         *      b. Has the user explicitly (not) consented to the submission of all extracted blueprint data?\n         *   If the answer to a. or b. is 'no', the user will see a modal when trying to submit the data donation.\n         *   In case a. the user can choose to submit (i.e., skip) the donation anyway (there is a continue button on the modal).\n         *   In case b. the user cannot continue until they have explicitly answered all consent questions (the continue button is hidden).\n         * - Submits extracted data via a centralized data submission composable.\n         *\n         * Props:\n         * - uploaderConfigs: Array of uploader configurations (name, blueprints, etc.)\n         * - actionUrl: Endpoint for final submission of data.\n         * - exceptionUrl: Logging endpoint for errors or diagnostics.\n         * - language: Current UI language code (e.g., 'en', 'de').\n         * - csrfToken: Token for securing form submission.\n         */\n        const { t, locale } = useI18n();\n        const props = __props;\n        const uploaderOutcomes = ref(initializeUploaderOutcomes()); // Used to track and validate the uploader states.\n        const { validateUploaders, unattendedUploaderShare, unattendedUploaderNames, blueprintsWithoutConsentCount, blueprintsWithoutConsentNames, allUploadersValid } = useUploaderValidator(uploaderOutcomes);\n        const { submitting, submitDonation } = useDataSubmitter(uploaderOutcomes, props.actionUrl);\n        /**\n         * Updates the outcome state of a specific uploader based on user interactions and extraction results.\n         *\n         * This function serves as a central callback for uploader components, consolidating all\n         * uploader state changes in one place for validation and submission purposes.\n         *\n         * @param componentId - Unique identifier for the uploader component\n         * @param consentMap - User consent decisions mapped by blueprint ID\n         * @param extractionState - Overall extraction status (success, partial, error) of the uploader\n         * @param blueprintStates - Detailed extraction state for each blueprint mapped by blueprint ID\n         * @param extractionOutcomes - Extracted data and metadata for each blueprint mapped by blueprint ID\n         */\n        function updateUploaderOutcome(componentId, consentMap, extractionState, blueprintStates, extractionOutcomes) {\n            const outcome = uploaderOutcomes.value[componentId];\n            if (outcome) {\n                Object.assign(outcome, {\n                    consentMap: consentMap,\n                    uploaderState: extractionState,\n                    blueprintStates: blueprintStates,\n                    extractionOutcome: extractionOutcomes,\n                });\n            }\n        }\n        let showModal = ref(false);\n        function hideModal() {\n            showModal.value = false;\n        }\n        /**\n         * Handles the \"Next\" button click, triggering validation and conditionally showing issues or submitting data.\n         *\n         * This function orchestrates the final steps in the upload workflow:\n         * 1. Validates all uploader states\n         * 2. If validation issues exist, displays the issue modal\n         * 3. If validation passes, submits the data donation\n         */\n        function proceed() {\n            validateUploaders();\n            if (!allUploadersValid.value) {\n                showModal.value = true;\n            }\n            else {\n                submitDonation();\n            }\n        }\n        /**\n         * Creates a lookup map that connects blueprint IDs to their human-readable names.\n         *\n         * @param uploader - The configuration object for an uploader component\n         * @returns A record with blueprint IDs as keys and names as values\n         */\n        function getBlueprintNameMap(uploader) {\n            const names = {};\n            for (const blueprint of uploader.blueprints) {\n                names[blueprint.id] = blueprint.name;\n            }\n            return names;\n        }\n        function initializeUploaderOutcomes() {\n            const initializedRecord = {};\n            for (const uploader of props.uploaderConfigs) {\n                initializedRecord[uploader.uploader_id] = {\n                    uploaderName: uploader.name,\n                    blueprintNames: getBlueprintNameMap(uploader),\n                    consentMap: null,\n                    uploaderState: null,\n                    blueprintStates: null,\n                    extractionOutcome: null,\n                };\n            }\n            return initializedRecord;\n        }\n        return (_ctx, _cache) => {\n            return (_openBlock(), _createElementBlock(_Fragment, null, [\n                _createElementVNode(\"div\", _hoisted_1, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.uploaderConfigs, (config) => {\n                        return (_openBlock(), _createBlock(UploaderWrapper, {\n                            \"blueprint-configs\": config.blueprints,\n                            \"combined-consent\": config.combined_consent,\n                            componentId: config.uploader_id,\n                            \"exception-url\": props.exceptionUrl,\n                            \"expects-zip\": config.upload_type === 'zip file',\n                            \"instruction-config\": config.instructions,\n                            name: config.name,\n                            onStatusChanged: updateUploaderOutcome\n                        }, null, 8, [\"blueprint-configs\", \"combined-consent\", \"componentId\", \"exception-url\", \"expects-zip\", \"instruction-config\", \"name\"]));\n                    }), 256))\n                ]),\n                _createVNode(IssueModal, {\n                    \"unattended-uploader-share\": _unref(unattendedUploaderShare),\n                    \"unattended-uploader-names\": _unref(unattendedUploaderNames),\n                    \"blueprints-without-consent-count\": _unref(blueprintsWithoutConsentCount),\n                    \"blueprints-without-consent-names\": _unref(blueprintsWithoutConsentNames),\n                    \"all-uploaders-valid\": _unref(allUploadersValid),\n                    \"show-modal\": _unref(showModal),\n                    onContinueAnyway: _unref(submitDonation),\n                    onModalClosed: hideModal\n                }, null, 8, [\"unattended-uploader-share\", \"unattended-uploader-names\", \"blueprints-without-consent-count\", \"blueprints-without-consent-names\", \"all-uploaders-valid\", \"show-modal\", \"onContinueAnyway\"]),\n                (_unref(submitting))\n                    ? (_openBlock(), _createBlock(SubmittingOverlay, { key: 0 }))\n                    : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_2, [\n                    _createElementVNode(\"div\", _hoisted_3, [\n                        _createElementVNode(\"button\", {\n                            class: \"flow-btn\",\n                            type: \"button\",\n                            onClick: proceed\n                        }, _toDisplayString(_unref(t)('uploader-app.next-btn')) + \"  ›\", 1)\n                    ])\n                ]),\n                _withDirectives(_createElementVNode(\"form\", _hoisted_4, [\n                    _createElementVNode(\"input\", {\n                        type: \"hidden\",\n                        name: \"csrfmiddlewaretoken\",\n                        value: _ctx.csrfToken\n                    }, null, 8, _hoisted_5)\n                ], 512), [\n                    [_vShow, false]\n                ])\n            ], 64));\n        };\n    }\n});\n","import script from \"./UploaderApp.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./UploaderApp.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./UploaderApp.vue?vue&type=style&index=0&id=5ccecba4&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\nimport UApp from './UploaderApp.vue';\nimport { createI18n } from 'vue-i18n';\nimport en from './locales/en.json';\nimport de from './locales/de.json';\nfunction deepMerge(target, source) {\n    const result = { ...target };\n    for (const key in source) {\n        if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n            result[key] = deepMerge(result[key] || {}, source[key]);\n        }\n        else {\n            result[key] = source[key];\n        }\n    }\n    return result;\n}\n/**\n * Entry point for the DDM uploader Vue application.\n *\n * This module initializes the Vue application by:\n * 1. Setting up i18n internationalization\n * 2. Finding the mount element in the DOM\n * 3. Parsing configuration data from data attributes\n * 4. Creating and mounting the Vue application with the appropriate props\n *\n * Expected `data-*` attributes on the mount element:\n * - data-uploader-configs-as-string\n * - data-action-url\n * - data-exception-url\n * - data-language\n * - data-csrf-token\n * - data-custom-translations\n *\n * @throws {Error} If the mount element is not found or required data attributes are missing\n */\nfunction initializeUploaderApp() {\n    const APP_CONFIG = {\n        selector: '#uapp',\n        defaultLocale: 'en',\n        fallbackLocale: 'en',\n    };\n    const mountEl = document.querySelector(APP_CONFIG.selector);\n    if (!mountEl) {\n        console.error(`Mount element not found using selector: \"${APP_CONFIG.selector}\"`);\n        throw new Error(`Failed to initialize uploader: Mount element \"${APP_CONFIG.selector}\" not found`);\n    }\n    // Validate required attributes.\n    const requiredAttributes = ['actionUrl', 'csrfToken', 'uploaderConfigsAsString', 'exceptionUrl'];\n    for (const attr of requiredAttributes) {\n        const datasetKey = attr.charAt(0).toLowerCase() + attr.slice(1);\n        if (!mountEl.dataset[datasetKey]) {\n            throw new Error(`Required attribute data-${attr.replace(/[A-Z]/g, m => `-${m.toLowerCase()}`)} is missing`);\n        }\n    }\n    const rawConfig = mountEl.dataset.uploaderConfigsAsString;\n    let uploaderConfigs = [];\n    try {\n        uploaderConfigs = JSON.parse(rawConfig ?? \"[]\");\n    }\n    catch (err) {\n        console.error(\"Failed to parse uploadConfig:\", err);\n    }\n    const app = createApp(UApp, {\n        actionUrl: mountEl.dataset.actionUrl,\n        exceptionUrl: mountEl.dataset.exceptionUrl,\n        language: mountEl.dataset.language,\n        uploaderConfigs: uploaderConfigs,\n        csrfToken: mountEl.dataset.csrfToken,\n    });\n    // Load and add custom translations, if provided.\n    let messages = {\n        en: en,\n        de: de,\n    };\n    if (mountEl.dataset.customTranslations) {\n        const customTranslations = JSON.parse(mountEl.dataset.customTranslations || '{}');\n        if (!(customTranslations == null) && !(customTranslations == '')) {\n            messages = {\n                en: deepMerge(en, customTranslations.en || {}),\n                de: deepMerge(de, customTranslations.de || {}),\n            };\n        }\n    }\n    const i18n = createI18n({\n        legacy: false,\n        locale: APP_CONFIG.defaultLocale,\n        fallbackLocale: APP_CONFIG.fallbackLocale,\n        messages: messages\n    });\n    // Set i18n locale based on the data attribute.\n    const userLanguage = mountEl.dataset.language || APP_CONFIG.defaultLocale;\n    const availableLocales = i18n.global.availableLocales;\n    if (availableLocales.includes(userLanguage)) {\n        i18n.global.locale.value = userLanguage;\n    }\n    else {\n        i18n.global.locale.value = APP_CONFIG.fallbackLocale;\n    }\n    app.use(i18n);\n    app.mount(APP_CONFIG.selector);\n}\ninitializeUploaderApp();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t256: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkddm_uploader_frontend\"] = self[\"webpackChunkddm_uploader_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(251); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","key","class","_hoisted_2","_hoisted_3","role","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","__name","props","combinedConsent","type","Boolean","blueprintId","emits","setup","__props","emit","__emit","t","te","locale","consented","updateConsent","consent","value","_ctx","_cache","id","name","autocomplete","onChange","$event","required","for","__exports__","EXTRACTION_STATES","SUCCESS","PARTIAL","FAILED","PENDING","NO_DATA","debounce","fn","wait","timer","args","clearTimeout","context","this","setTimeout","apply","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","pageSize","blueprintOutcome","currentPage","showData","searchTerm","debouncedSearch","updateSearch","toLowerCase","newValue","filteredItems","lowercasedSearchTerm","extractedData","filter","item","Object","prototype","hasOwnProperty","call","String","includes","lowerPosition","Math","max","upperPosition","min","length","maxPage","ceil","immediate","deep","nextTablePage","prevTablePage","toggleShowHideData","extractedFieldsMap","values","slice","row","keys","placeholder","lower","upper","total","onClick","disabled","_hoisted_13","_hoisted_14","_hoisted_15","blueprint","extractionState","extractionMessage","extractionErrorText","extractionOutcome","hasDetailErrors","errors","iconStateMap","iconClass","extractionPending","extractionSuccess","nothingExtracted","extractionFailed","passConsentUpdateToParent","description","ExtractionTable","ConsentQuestion","onConsentUpdated","error","i","i18nDetail","uploaderState","blueprints","blueprintExtractionStates","blueprintOutcomeMap","blueprintUIMap","getBlueprintUIMap","fromEntries","map","bp","state","msg","i18nState","processingErrors","anyDetails","some","e","errorText","getErrorDescription","updateBlueprintUIMap","newMap","forEach","assign","errorDescription","introText","ExtractionItem","UPLOADER_STATES","IDLE","PROCESSING","DONE","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","expectsZip","generalErrors","isDragging","retryRequested","acceptedFileInput","fileSelectorBorderClass","initialize","borderClassMap","handleDrop","event","preventDefault","files","dataTransfer","handleFileInput","input","target","file","resetUploader","val","showFileSelector","showProcessingIndicator","showResults","showRetryButton","extractionNoData","onDragover","onDragleave","onDrop","$refs","fileInput","click","style","ref","accept","instructions","componentId","currentStep","stepDown","stepUp","setStep","step","canStepDown","canStepUp","currentInstruction","text","mode","default","innerHTML","_","index","useConsentManager","blueprintConfigs","blueprintConsentMap","initializeConsentMap","consentMap","console","warn","ERROR_LEVELS","INFO","WARN","CRITICAL","ERROR_SCOPES","FILE","BLUEPRINT","ERROR_CATEGORIES","ZIP_HANDLING","FILE_PROCESSING","BLUEPRINT_SPECIFICATION","EXTRACTION","useExtractionStateTracker","results","generalErrorsToDisplay","errorsToDisplay","resetState","getExtractionState","processGeneralErrors","evaluateBlueprintStates","evaluateOverallState","level","push","result","entries","getBlueprintState","nBlueprints","nSuccess","getStateCount","nNoData","nFailed","determineOverallState","success","noData","failed","criticalErrors","nExtracted","stats","extractionStats","ratioMissing","nRowsTotal","nRowsMissingField","ratioFilteredOut","nRowsFilteredOut","targetState","BlueprintExtractionOutcome","constructor","Map","noKeyMatches","extractionRuleLog","initializeExtractionRuleLog","extraction_rules","extractionRules","rule","incrementExtractionRuleCount","extractionRule","registerNoKeyMatch","expectedField","availableFields","lookupKey","JSON","stringify","sort","registerError","category","scope","mapExtractedField","extractedField","ruleField","has","set","ERROR_CATALOG","INVALID_ZIP","fileType","ZIP_READ_FAIL","INVALID_REGEX","INVALID_RULE_REGEX","ruleId","ruleRegex","NO_FILE_MATCH","regexPath","availableFiles","FILE_PROCESSING_FAIL_GENERAL","STRING_CONVERSION_ERROR","NO_EXTRACTION_RULES","PARSING_ERROR","contentType","UNSUPPORTED_BP_FORMAT","format","MORE_THAN_ONE_KEY_MATCH","field","defaultKey","registerGeneralError","errorsCollection","catalogError","getOriginalValueAsString","v","isNumeric","isNaN","parseFloat","isFinite","Number","bothDates","entryValue","comparisonValue","fromISO","isValid","fromRFC2822","fromHTTP","getDates","prepareValues","dateEntry","dateComparison","valueIsEqual","valueIsNotEqual","compareValues","comparator","preparedEntry","preparedComparison","valueIsSmallerOrEqual","a","b","valueIsGreaterOrEqual","valueIsSmaller","valueIsGreater","regexDeleteMatch","originalValue","comparisonRegExp","RegExp","replaceAll","regexReplaceMatch","replacementValue","regexDeleteRow","test","getMissingFields","dataRow","expectedFields","regexMatching","missingFields","matchFound","getKeyMap","keyMap","regex_field","errorContext","extractData","extractedRowData","get","undefined","comparison_operator","comparison_value","discardRow","replacement_value","deleteRow","processContent","content","parsedContentArray","getParsedContentArray","expected_fields","exp_fields_regex_matching","loadJsonContent","json_extraction_root","loadCsvContent","csv_delimiter","extractionRoot","fileContent","parse","Error","getNestedJsonContent","Symbol","iterator","Array","csvDelimiter","parserResult","header","delimiter","skipEmptyLines","dynamicTyping","data","pathParts","replace","split","current","async","handleZipFile","fileIsZip","lastIndexOf","zip","re","regex_path","matchingFiles","zipEntry","handleSingleFile","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsText","extensionIsValid","endsWith","mimeIsValid","useFileProcessor","handleSelectedFile","useLogPoster","uploaderId","exceptionUrl","logDate","Date","now","postLogs","postLog","logsToPost","logType","message","postData","toISOString","response","fetch","method","headers","body","ok","status","statusText","instructionConfig","processFile","emitStatus","catch","isExtractionSuccessful","showCombinedConsent","Instructions","FileDrop","onFileDropped","ExtractionOverview","tabindex","unattendedUploaderShare","unattendedUploaderNames","blueprintsWithoutConsentCount","blueprintsWithoutConsentNames","allUploadersValid","showModal","modalVisible","canContinueAnyway","hideModal","combineStrings","strings","nStrings","combinedString","handleKeyDown","window","addEventListener","removeEventListener","useUploaderValidator","uploaderOutcomes","totalUploaders","notAttemptedCount","validateUploaders","allDonationsAttempted","consentObtainedForAll","uploader","uploaderName","blueprintStates","blueprintNames","log","useDataSubmitter","postUrl","submitting","gatherPostData","createZip","filename","generateAsync","compression","compressionOptions","submitDonation","dataBlob","formElement","document","getElementById","formData","FormData","append","redirected","location","href","url","enctype","uploaderConfigs","actionUrl","language","csrfToken","initializeUploaderOutcomes","updateUploaderOutcome","extractionOutcomes","outcome","proceed","getBlueprintNameMap","names","initializedRecord","uploader_id","config","UploaderWrapper","combined_consent","upload_type","onStatusChanged","IssueModal","onContinueAnyway","onModalClosed","SubmittingOverlay","deepMerge","source","isArray","initializeUploaderApp","APP_CONFIG","selector","defaultLocale","fallbackLocale","mountEl","querySelector","requiredAttributes","attr","datasetKey","charAt","dataset","m","rawConfig","uploaderConfigsAsString","err","app","messages","en","de","customTranslations","i18n","legacy","userLanguage","availableLocales","global","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}