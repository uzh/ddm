# Generated by Django 4.2.16 on 2025-03-19 17:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('ddm_questionnaire', '0011_alter_openquestion_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FilterCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_object_id', models.PositiveIntegerField()),
                ('source_object_id', models.PositiveIntegerField()),
                ('index', models.IntegerField(default=1)),
                ('combinator', models.CharField(choices=[('AND', 'AND'), ('OR', 'OR')], default='AND', help_text='Defines whether all conditions (AND) or any (OR) must be met.In the filter condition with the lowest index, this will be ignored. The conditions following will be evaluated as a chain, where AND has higher precedence than OR. E.g., Condition1 OR Condition2 AND Condition3 OR Condition4 will be evaluated as "Condition1 OR (Condition2 AND Condition3) OR Condition4".', max_length=3)),
                ('condition_operator', models.CharField(choices=[('==', 'Equal (==)'), ('!=', 'Not Equal (!=)'), ('>', 'Greater than (>)'), ('<', 'Smaller than (<)'), ('>=', 'Greater than or equal (>=)'), ('<=', 'Smaller than or equal (<=)'), ('contains', 'Contains'), ('contains_not', 'Does not Contain')], default='==', help_text='The condition operator for filtering.', max_length=20)),
                ('condition_value', models.JSONField(blank=True, help_text="The value to compare the source question's answer against.", null=True)),
                ('source_content_type', models.ForeignKey(help_text='The question/question item whose answer is evaluated against the filter condition.', on_delete=django.db.models.deletion.CASCADE, related_name='filter_source', to='contenttypes.contenttype')),
                ('target_content_type', models.ForeignKey(help_text='The target question/question item to which this filter applies.', on_delete=django.db.models.deletion.CASCADE, related_name='filter_groups', to='contenttypes.contenttype')),
            ],
        ),
    ]
